openapi: 3.0.0
info:
  version: 1.0.0
  title: 🥑 Avocado
  description: Developer Relations means relating to developers. There are millions of
    developers. How do you relate to them all? What are your metrics? Where do
    you even get started? Avocado is an out-of-the-box developer relations
    system, with your success at heart. ❤️️
  contact:
    email: parkerkrhoyt@gmail.com
  license:
    name: MIT
externalDocs:
  description: Find out more about Avocado
  url: http://kevinhoyt.com
servers:
  - url: http://localhost:3000/api
  - url: https://insights-api.mybluemix.net/api
security:
  - ApiKeyAuth: []
tags:
  - name: 📒 Account
    description: Account ownership of data sets
  - name: 🌈 Color
    description: Available system colors
  - name: 🤝 Situation
    description: Different types of developer interactions
  - name: 💬 ️Language
    description: Languages spoken by developers around the world
  - name: 🕹️ Level
    description: Levels that can be obtained by developers
  - name: 🏢 Organization
    description: Logical groupings of developers (tagging)
  - name: 🖇️ Relationship
    description: Business connections between stakeholders
  - name: 👔 Role
    description: Logical groupings of developers (tagging)
  - name: 🔧 Skill
    description: Skills available to developers (tagging)
  - name: 🖥️ Developer
    description: Individual developers - and advocates
  - name: 🖼️ Media
    description: Media (image files) associated with content aggregation
  - name: ️🗒️ Note
    description: Notes associated with developer activities
  - name: 🏗️ Contribution
    description: Contributions made by developers
  - name: 🧱 Capacity
    description: Capacity in which developer contributed
  - name: 📓 Blog
    description: Blog feeds to aggregate
  - name: 📓 📝 Blog Post
    description: Post made to a personal blog
  - name: 🔥 Dev
    description: DEV Community accounts to aggregate (Dev.to)
  - name: 🔥 📝 Dev Post
    description: Post made to a DEV Community account
  - name: 🐙 GitHub
    description: GitHub accounts to aggregate
  - name: 🐙 🐱 GitHub Event
    description: Public GitHub repository interactions
  - name: 📸 Instagram
    description: Developer Instagram account
  - name: 📇 LinkedIn
    description: Developer LinkedIn account
  - name: 🔮 Medium
    description: Medium feeds to aggregate
  - name: 🔮 📝 Medium Post
    description: Post made to a Medium account
  - name: 👽 Reddit
    description: Reddit accounts to aggregate
  - name: 👽 📝 Reddit Post
    description: Post made to a Reddit account
  - name: 📚 Stack Overflow
    description: Stack Overflow accounts to aggregate
  - name: 📚 ✋ Stack Overflow Answer
    description: Answer made by a Stack Overflow account
  - name: 📚 ❓ Stack Overflow Question
    description: Question proposed by a Stack Overflow account
  - name: 🐦 Twitter
    description: Twitter accounts to aggregate
  - name: 🐦 ✒️ Twitter Status
    description: Status update to a Twitter account
  - name: 🌐 Website
    description: Developer website
  - name: 📺 YouTube
    description: YouTube accounts to aggregate
  - name: 📺 📼 YouTube Video
    description: Video posted to a YouTube account
  - name: 🗄️ Repository
    description: Specific GitHub repositories to monitor
  - name: 🧠 Watson
    description: Watson machine learning features
  - name: 🧰 Utility
    description: Tools used that are unrelated to storage
paths:
  /account:
    get:
      tags:
        - 📒 Account
      summary: Read all available accounts
      operationId: getAccounts
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    owner:
                      type: string
                      format: uuid
                    email:
                      type: string
                      example: thedude@biglebowski.com
                    role:
                      type: string
                      example: owner
                    token:
                      type: string
                      format: uuid
    post:
      tags:
        - 📒 Account
      summary: Create a new account
      operationId: createAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner:
                  type: string
                  format: uuid
                email:
                  type: string
                  example: thedude@biglebowski.com
                password:
                  type: string
                  format: password
                role:
                  type: string
                  example: owner
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  owner:
                    type: string
                    format: uuid
                  email:
                    type: string
                    example: thedude@biglebowski.com
                  role:
                    type: string
                    example: owner
                  token:
                    type: string
                    format: uuid
  "/account/{id}":
    parameters:
      - name: id
        in: path
        description: ID of a specific account
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 📒 Account
      summary: Read specific account by ID
      operationId: getAccountByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  owner:
                    type: string
                    format: uuid
                  email:
                    type: string
                    example: thedude@biglebowski.com
                  role:
                    type: string
                    example: owner
                  token:
                    type: string
                    format: uuid
    put:
      tags:
        - 📒 Account
      summary: Update specific account by ID
      operationId: updateAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: thedude@biglebowski.com
                owner:
                  type: string
                  format: uuid
                role:
                  type: string
                  example: owner
                password:
                  type: string
                  format: password
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  owner:
                    type: string
                    format: uuid
                  email:
                    type: string
                    example: thedude@biglebowski.com
                  role:
                    type: string
                    example: owner
                  token:
                    type: string
                    format: uuid
    delete:
      tags:
        - 📒 Account
      summary: Delete specific account by ID
      operationId: deleteAccountByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/account/{id}/token/refresh":
    parameters:
      - name: id
        in: path
        description: ID of a specific account
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 📒 Account
      summary: Refresh the token for a given account
      operationId: accountRefreshToken
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    format: uuid
  "/account/email/{email}":
    parameters:
      - name: email
        in: path
        description: Email of a specific account
        required: true
        schema:
          type: string
          example: thedude@biglebowski.com
    get:
      tags:
        - 📒 Account
      summary: Read specific account by ID
      operationId: getAccountByEmail
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  owner:
                    type: string
                    format: uuid
                  email:
                    type: string
                    example: thedude@biglebowski.com
                  role:
                    type: string
                    example: view
                  token:
                    type: string
                    format: uuid
  /account/email:
    post:
      tags:
        - 📒 Account
      summary: Check if account exists
      operationId: accountExists
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: thedude@biglebowski.com
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: thedude@biglebowski.com
                  found:
                    type: boolean
  /account/login:
    post:
      tags:
        - 📒 Account
      summary: Login a specific account
      operationId: accountLogin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: thedude@biglebowski.com
                password:
                  type: string
                  format: password
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  owner:
                    type: string
                    format: uuid
                  email:
                    type: string
                    example: thedude@biglebowski.com
                  role:
                    type: string
                    example: view
                  token:
                    type: string
                    format: uuid
  "/account/token/{token}":
    parameters:
      - name: token
        in: path
        description: Token of a specific account
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 📒 Account
      summary: Read specific account by token
      operationId: getAccountByToken
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  owner:
                    type: string
                    format: uuid
                  email:
                    type: string
                    example: thedude@biglebowski.com
                  role:
                    type: string
                    example: view
                  token:
                    type: string
                    format: uuid
  /color:
    get:
      tags:
        - 🌈 Color
      summary: Read all available colors
      operationId: getColors
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    account_id:
                      type: string
                      format: uuid
                    name:
                      type: string
                      example: Blue
                    foreground:
                      type: string
                      example: "#ffffff"
                    background:
                      type: string
                      example: "#ffffff"
    post:
      tags:
        - 🌈 Color
      summary: Create a new color
      operationId: createColor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Blue
                foreground:
                  type: string
                  example: "#ffffff"
                background:
                  type: string
                  example: "#ffffff"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - name
                  - foreground
                  - background
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  name:
                    type: string
                    example: Blue
                  foreground:
                    type: string
                    example: "#ffffff"
                  background:
                    type: string
                    example: "#ffffff"
  "/color/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired color
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🌈 Color
      summary: Read specific color by ID
      operationId: getColorByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - name
                  - foreground
                  - background
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  name:
                    type: string
                    example: Blue
                  foreground:
                    type: string
                    example: "#ffffff"
                  background:
                    type: string
                    example: "#ffffff"
    put:
      tags:
        - 🌈 Color
      summary: Update specific color by ID
      operationId: updateColor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Blue
                foreground:
                  type: string
                  example: "#ffffff"
                background:
                  type: string
                  example: "#ffffff"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1color~1%7Bid%7D/get/responses/200/content/applicat\
                  ion~1json/schema"
    delete:
      tags:
        - 🌈 Color
      summary: Delete specific color by ID
      operationId: deleteColorByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  /situation:
    get:
      tags:
        - 🤝 Situation
      summary: Read all available situations
      operationId: getSituations
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - name
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    account_id:
                      type: string
                      format: uuid
                    name:
                      type: string
                      example: Sleeping
                    color_id:
                      type: string
                      format: uuid
    post:
      tags:
        - 🤝 Situation
      summary: Create a new situation type
      operationId: createSituation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Sleeping
                color_id:
                  type: string
                  format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1situation/get/responses/200/content/application~1j\
                  son/schema/items"
  "/situation/{id}":
    parameters:
      - name: id
        in: path
        description: ID of specific situation type
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🤝 Situation
      summary: Read specific situation by ID
      operationId: getSituationByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - name
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  account_id:
                    type: string
                    format: uuid
                  name:
                    type: string
                    example: Sleeping
                  color_id:
                    type: string
                    format: uuid
    put:
      tags:
        - 🤝 Situation
      summary: Update specific situation by ID
      operationId: updateSituation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Sleeping
                color_id:
                  type: string
                  format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1situation~1%7Bid%7D/get/responses/200/content/appl\
                  ication~1json/schema"
    delete:
      tags:
        - 🤝 Situation
      summary: Delete specific situation by ID
      operationId: deleteSituationByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  /language:
    get:
      tags:
        - 💬 ️Language
      summary: Read all available languages
      operationId: getLanguages
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    account_id:
                      type: string
                      format: uuid
                    name:
                      type: string
                      example: English
                    count:
                      type: integer
                      example: 0
    post:
      tags:
        - 💬 ️Language
      summary: Create a new language
      operationId: createLanguage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: English
                color_id:
                  type: string
                  format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - name
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  account_id:
                    type: string
                    format: uuid
                  name:
                    type: string
                    example: English
  "/language/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired language
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 💬 ️Language
      summary: Read specific language by ID
      operationId: getLanguageByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - name
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  account_id:
                    type: string
                    format: uuid
                  name:
                    type: string
                    example: English
    put:
      tags:
        - 💬 ️Language
      summary: Update specific language by ID
      operationId: updateLanguage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: English
                color_id:
                  type: string
                  format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1language~1%7Bid%7D/get/responses/200/content/appli\
                  cation~1json/schema"
    delete:
      tags:
        - 💬 ️Language
      summary: Delete specific language by ID
      operationId: deleteLanguageByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/language/name/{prefix}":
    parameters:
      - name: prefix
        in: path
        description: Prefix for a given language
        required: true
        schema:
          type: string
          example: Eng
    get:
      tags:
        - 💬 ️Language
      summary: Search for language with given value
      operationId: searchLanguageByName
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    account_id:
                      type: string
                      format: uuid
                    name:
                      type: string
                      example: English
  /level:
    get:
      tags:
        - 🕹️ Level
      summary: Read all available levels
      operationId: getLevels
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    account_id:
                      type: string
                      format: uuid
                    name:
                      type: string
                      example: Book (Author)
                    low:
                      type: integer
                      example: 0
                    high:
                      type: integer
                      example: 10
                    count:
                      type: integer
                      example: 0
    post:
      tags:
        - 🕹️ Level
      summary: Create a new level
      operationId: createLevel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Ambassador
                low:
                  type: integer
                  example: 0
                high:
                  type: integer
                  example: 10
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - name
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  account_id:
                    type: string
                    format: uuid
                  name:
                    type: string
                    example: Ambassadors
                  low:
                    type: integer
                    example: 0
                  weight:
                    type: integer
                    example: 10
  "/level/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired level
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🕹️ Level
      summary: Read specific level details by ID
      operationId: getLevelByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - name
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  account_id:
                    type: string
                    format: uuid
                  name:
                    type: string
                    example: Ambassadors
                  low:
                    type: integer
                    example: 0
                  weight:
                    type: integer
                    example: 10
    put:
      tags:
        - 🕹️ Level
      summary: Update specific level by ID
      operationId: updateLevel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Ambassadors
                low:
                  type: integer
                  example: 0
                weight:
                  type: integer
                  example: 10
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1level~1%7Bid%7D/get/responses/200/content/applicat\
                  ion~1json/schema"
    delete:
      tags:
        - 🕹️ Level
      summary: Delete specific level by ID
      operationId: deleteLevelByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/level/name/{prefix}":
    parameters:
      - name: prefix
        in: path
        description: Prefix for a given level
        required: true
        schema:
          type: string
          example: Ambassador
    get:
      tags:
        - 🕹️ Level
      summary: Search for level with given value
      operationId: searchLevelByName
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    account_id:
                      type: string
                      format: uuid
                    name:
                      type: string
                      example: Book (Author)
                    low:
                      type: integer
                      example: 0
                    weight:
                      type: integer
                      example: 10
  /organization:
    get:
      tags:
        - 🏢 Organization
      summary: Read all available organizations
      operationId: getOrganizations
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    account_id:
                      type: string
                      format: uuid
                    name:
                      type: string
                      example: IBM
                    color_id:
                      type: string
                      format: uuid
                    count:
                      type: integer
                      example: 0
    post:
      tags:
        - 🏢 Organization
      summary: Create a new organization
      operationId: createOrganization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: IBM
                color_id:
                  type: string
                  format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - name
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  name:
                    type: string
                    example: IBM
                  color_id:
                    type: string
                    format: uuid
  "/organization/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired organization
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🏢 Organization
      summary: Read specific organization by ID
      operationId: getOrganizationByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - name
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  name:
                    type: string
                    example: IBM
                  color_id:
                    type: string
                    format: uuid
    put:
      tags:
        - 🏢 Organization
      summary: Update specific organization by ID
      operationId: updateOrganization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: IBM
                color_id:
                  type: string
                  format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1organization~1%7Bid%7D/get/responses/200/content/a\
                  pplication~1json/schema"
    delete:
      tags:
        - 🏢 Organization
      summary: Delete specific organization by ID
      operationId: deleteOrganizationByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/organization/name/{prefix}":
    parameters:
      - name: prefix
        in: path
        description: Prefix for a given organization
        required: true
        schema:
          type: string
          example: IB
    get:
      tags:
        - 🏢 Organization
      summary: Search for organization with given value
      operationId: searchOrganizationByName
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    account_id:
                      type: string
                      format: uuid
                    name:
                      type: string
                      example: IBM
                    color_id:
                      type: string
                      format: uuid
  /relationship:
    get:
      tags:
        - 🖇️ Relationship
      summary: Read all available relationships
      operationId: getRelationships
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    account_id:
                      type: string
                      format: uuid
                    name:
                      type: string
                      example: ISV
                    color_id:
                      type: string
                      format: uuid
                    count:
                      type: integer
                      example: 0
    post:
      tags:
        - 🖇️ Relationship
      summary: Create a new relationship
      operationId: createRelationship
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: ISV
                color_id:
                  type: string
                  format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - name
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  account_id:
                    type: string
                    format: uuid
                  name:
                    type: string
                    example: IBM
                  color_id:
                    type: string
                    format: uuid
  "/relationship/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired relationship
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🖇️ Relationship
      summary: Read specific relationship by ID
      operationId: getRelationshipByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - name
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  account_id:
                    type: string
                    format: uuid
                  name:
                    type: string
                    example: IBM
                  color_id:
                    type: string
                    format: uuid
    put:
      tags:
        - 🖇️ Relationship
      summary: Update specific relationship by ID
      operationId: updateRelationship
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: ISV
                color_id:
                  type: string
                  format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1relationship~1%7Bid%7D/get/responses/200/content/a\
                  pplication~1json/schema"
    delete:
      tags:
        - 🖇️ Relationship
      summary: Delete specific relationship by ID
      operationId: deleteRelationshipByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/relationship/name/{prefix}":
    parameters:
      - name: prefix
        in: path
        description: Prefix for a given relationship
        required: true
        schema:
          type: string
          example: IS
    get:
      tags:
        - 🖇️ Relationship
      summary: Search for relationship with given value
      operationId: searchRelationshipByName
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    account_id:
                      type: string
                      format: uuid
                    name:
                      type: string
                      example: ISV
                    color_id:
                      type: string
                      format: uuid
  /role:
    get:
      tags:
        - 👔 Role
      summary: Read all available roles
      operationId: getRoles
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    account_id:
                      type: string
                      format: uuid
                    name:
                      type: string
                      example: Engineer
                    color_id:
                      type: string
                      format: uuid
                    count:
                      type: integer
                      example: 0
    post:
      tags:
        - 👔 Role
      summary: Create a new role
      operationId: createRole
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Engineer
                color_id:
                  type: string
                  format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - name
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  account_id:
                    type: string
                    format: uuid
                  name:
                    type: string
                    example: Engineer
                  color_id:
                    type: string
                    format: uuid
  "/role/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired role
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 👔 Role
      summary: Read specific role by ID
      operationId: getRoleByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - name
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  account_id:
                    type: string
                    format: uuid
                  name:
                    type: string
                    example: Engineer
                  color_id:
                    type: string
                    format: uuid
    put:
      tags:
        - 👔 Role
      summary: Update specific role by ID
      operationId: updateRole
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Engineer
                color_id:
                  type: string
                  format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1role~1%7Bid%7D/get/responses/200/content/applicati\
                  on~1json/schema"
    delete:
      tags:
        - 👔 Role
      summary: Delete specific role by ID
      operationId: deleteRoleByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/role/name/{prefix}":
    parameters:
      - name: prefix
        in: path
        description: Prefix for a given role
        required: true
        schema:
          type: string
          example: Eng
    get:
      tags:
        - 👔 Role
      summary: Search for role with given value
      operationId: searchRoleByName
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    account_id:
                      type: string
                      format: uuid
                    name:
                      type: string
                      example: Engineer
                    color_id:
                      type: string
                      format: uuid
  /skill:
    get:
      tags:
        - 🔧 Skill
      summary: Read all available skills
      operationId: getSkills
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    name:
                      type: string
                      example: JavaScript
                    color:
                      type: string
                      example: "#ffffff"
                    count:
                      type: integer
                      example: 0
    post:
      tags:
        - 🔧 Skill
      summary: Create a new skill
      operationId: createSkill
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: JavaScript
                color:
                  type: string
                  example: "#ffffff"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - name
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  name:
                    type: string
                    example: JavaScript
                  color:
                    type: string
                    example: "#ffffff"
  "/skill/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired skill
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🔧 Skill
      summary: Read specific skill by ID
      operationId: getSkillByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - name
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  name:
                    type: string
                    example: JavaScript
                  color:
                    type: string
                    example: "#ffffff"
    put:
      tags:
        - 🔧 Skill
      summary: Update specific skill by ID
      operationId: updateSkill
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: JavaScript
                color:
                  type: string
                  example: "#ffffff"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1skill~1%7Bid%7D/get/responses/200/content/applicat\
                  ion~1json/schema"
    delete:
      tags:
        - 🔧 Skill
      summary: Delete specific skill by ID
      operationId: deleteSkillByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/skill/name/{prefix}":
    parameters:
      - name: prefix
        in: path
        description: Prefix for a given skill
        required: true
        schema:
          type: string
          example: Java
    get:
      tags:
        - 🔧 Skill
      summary: Search for skill with given value
      operationId: searchSkillByName
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    name:
                      type: string
                      example: JavaScript
                    color:
                      type: string
                      example: "#ffffff"
  /developer:
    get:
      parameters:
        - name: private
          in: query
          description: Include developers marked as private
          required: false
          schema:
            type: boolean
            default: false
      tags:
        - 🖥️ Developer
      summary: Read all developers
      operationId: getDevelopers
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - name
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    account_id:
                      type: string
                      format: uuid
                    level_id:
                      type: string
                      format: uuid
                    name:
                      type: string
                      example: Monty Burns
                    email:
                      type: string
                      example: smithers@burns.com
                    title:
                      type: string
                      example: Fancy pants CEO
                    description:
                      type: string
                      example: Excellent!
                    image:
                      type: string
                      example: http://something.com
                    location:
                      type: string
                      example: Armonk, NY
                    latitude:
                      type: number
                      format: float
                      example: 41.1328412
                    longitude:
                      type: number
                      format: float
                      example: -73.7492039
                    address:
                      type: string
                      example: 123 Something Pl
                    city:
                      type: string
                      example: Armonk
                    region:
                      type: string
                      example: New York
                    postal:
                      type: string
                      example: "12345"
                    country:
                      type: string
                      example: USA
                    public:
                      type: integer
                      example: 0
                    internal:
                      type: string
                      example: internalID
    post:
      tags:
        - 🖥️ Developer
      summary: Create a new developer
      operationId: createDeveloper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                level_id:
                  type: string
                  format: uuid
                name:
                  type: string
                  example: Monty Burns
                email:
                  type: string
                  example: smithers@burns.com
                title:
                  type: string
                  example: Fancy pants CEO
                description:
                  type: string
                  example: Excellent!
                image:
                  type: string
                  example: http://something.com
                location:
                  type: string
                  example: Armonk, NY
                latitude:
                  type: number
                  format: float
                  example: 41.1328412
                longitude:
                  type: number
                  format: float
                  example: -73.7492039
                address:
                  type: string
                  example: 123 Something Pl
                city:
                  type: string
                  example: Armonk
                region:
                  type: string
                  example: New York
                postal:
                  type: string
                  example: "12345"
                country:
                  type: string
                  example: USA
                public:
                  type: integer
                  example: 0
                internal:
                  type: string
                  example: internalID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1developer/get/responses/200/content/application~1j\
                  son/schema/items"
  "/developer/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired developer
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🖥️ Developer
      summary: Read specific developer by ID
      operationId: getDeveloperByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - name
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  account_id:
                    type: string
                    format: uuid
                  level_id:
                    type: string
                    format: uuid
                  name:
                    type: string
                    example: Monty Burns
                  email:
                    type: string
                    example: smithers@burns.com
                  title:
                    type: string
                    example: Fancy pants CEO
                  description:
                    type: string
                    example: Excellent!
                  image:
                    type: string
                    example: http://something.com
                  location:
                    type: string
                    example: Armonk, NY
                  latitude:
                    type: number
                    format: float
                    example: 41.1328412
                  longitude:
                    type: number
                    format: float
                    example: -73.7492039
                  address:
                    type: string
                    example: 123 Something Pl
                  city:
                    type: string
                    example: Armonk
                  region:
                    type: string
                    example: New York
                  postal:
                    type: string
                    example: "12345"
                  country:
                    type: string
                    example: USA
                  public:
                    type: integer
                    example: 0
                  internal:
                    type: string
                    example: internalID
    put:
      tags:
        - 🖥️ Developer
      summary: Update specific developer by ID
      operationId: updateDeveloper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                level_id:
                  type: string
                  format: uuid
                name:
                  type: string
                  example: Monty Burns
                email:
                  type: string
                  example: smithers@burns.com
                title:
                  type: string
                  example: Fancy pants CEO
                description:
                  type: string
                  example: Excellent!
                image:
                  type: string
                  example: http://something.com
                location:
                  type: string
                  example: Armonk, NY
                latitude:
                  type: number
                  format: float
                  example: 41.1328412
                longitude:
                  type: number
                  format: float
                  example: -73.7492039
                address:
                  type: string
                  example: 123 Something Pl
                city:
                  type: string
                  example: Armonk
                region:
                  type: string
                  example: New York
                postal:
                  type: string
                  example: "12345"
                country:
                  type: string
                  example: USA
                public:
                  type: integer
                  example: 0
                internal:
                  type: string
                  example: internalID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1developer~1%7Bid%7D/get/responses/200/content/appl\
                  ication~1json/schema"
    delete:
      tags:
        - 🖥️ Developer
      summary: Delete specific developer by ID
      operationId: deleteDeveloperByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/developer/{id}/social":
    parameters:
      - name: id
        in: path
        description: ID field for desired developer
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🖥️ Developer
      summary: Get social channels associated with a developer by their ID
      operationId: getDeveloperSocialByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    developer_id:
                      type: string
                      format: uuid
                    activity_id:
                      type: string
                      format: uuid
                    activity_name:
                      type: string
                      example: Conference
                    full_text:
                      type: string
                      example: IBM was here.
  "/developer/{id}/{model}":
    parameters:
      - name: id
        in: path
        description: ID field for desired developer
        required: true
        schema:
          type: string
          format: uuid
      - name: model
        in: path
        description: Name of desired model (Language, Organization, Language, Skill, Role,
          Relationship)
        required: true
        schema:
          type: string
          example: skill
    get:
      tags:
        - 🖥️ Developer
      summary: Get model items associated with a developer by their ID
      operationId: getDeveloperItemsByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    name:
                      type: string
                      example: IBM
    post:
      tags:
        - 🖥️ Developer
      summary: Associate a specific developer with the given model
      operationId: createDeveloperItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                name:
                  type: string
                  example: IBM
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    developer_id:
                      type: string
                      format: uuid
                    name:
                      type: string
                      example: IBM
    put:
      tags:
        - 🖥️ Developer
      summary: Update developer association with a given model
      operationId: updateDeveloperItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
                    example: IBM
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    developer_id:
                      type: string
                      format: uuid
                    name:
                      type: string
                      example: IBM
    delete:
      tags:
        - 🖥️ Developer
      summary: Remove developer association with a given model
      operationId: removeDeveloperItem
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    model:
                      type: string
                      example: skill
  "/developer/{developer_id}/{model}/{model_id}":
    parameters:
      - name: developer_id
        in: path
        description: ID field for desired developer
        required: true
        schema:
          type: string
          format: uuid
      - name: model
        in: path
        description: Name of desired model (Language, Organization, Language, Skill, Role)
        required: true
        schema:
          type: string
          example: skill
      - name: model_id
        in: path
        description: ID field for the desired skill
        required: true
        schema:
          type: string
          format: uuid
    delete:
      tags:
        - 🖥️ Developer
      summary: Remove a specific model relation for a specific developer
      operationId: removeDeveloperItemsByModelID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    developer_id:
                      type: string
                      format: uuid
                    model:
                      type: string
                      example: skill
                    model_id:
                      type: string
                      format: uuid
  /media:
    get:
      tags:
        - 🖼️ Media
      summary: Read all available media
      operationId: getMedias
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - url
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    url:
                      type: string
                      example: http://something.com
                    keywords:
                      type: array
                      items:
                        type: string
                      example:
                        - eagle
                        - landed
                        - moon
    post:
      tags:
        - 🖼️ Media
      summary: Create a new media reference
      operationId: createMedia
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  example: http://something.com
                keywords:
                  type: array
                  items:
                    type: string
                  example:
                    - eagle
                    - landed
                    - moon
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1media/get/responses/200/content/application~1json/\
                  schema/items"
  "/media/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired media reference
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🖼️ Media
      summary: Read specific media reference by ID
      operationId: getMediaByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - url
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  url:
                    type: string
                    example: http://something.com
                  keywords:
                    type: array
                    items:
                      type: string
                    example:
                      - eagle
                      - landed
                      - moon
    put:
      tags:
        - 🖼️ Media
      summary: Update specific media reference by ID
      operationId: updateMedia
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  example: http://something.com
                keywords:
                  type: array
                  items:
                    type: string
                  example:
                    - eagle
                    - landed
                    - moon
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1media~1%7Bid%7D/get/responses/200/content/applicat\
                  ion~1json/schema"
    delete:
      tags:
        - 🖼️ Media
      summary: Delete specific media reference by ID
      operationId: deleteMediaByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/media/url/{url}":
    parameters:
      - name: url
        in: path
        description: URL field for desired media reference
        required: true
        schema:
          type: string
          example: http://something.com
    get:
      tags:
        - 🖼️ Media
      summary: Read specific media reference by URL
      operationId: getMediaByURL
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - url
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  url:
                    type: string
                    example: http://something.com
                  keywords:
                    type: array
                    items:
                      type: string
                    example:
                      - eagle
                      - landed
                      - moon
  /note:
    get:
      tags:
        - ️🗒️ Note
      summary: Read all available notes
      operationId: getNotes
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - developer_id
                    - situation_id
                    - full_text
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    developer_id:
                      type: string
                      format: uuid
                    situation_id:
                      type: string
                      format: uuid
                    full_text:
                      type: string
                      example: Somewhere over the rainbow.
    post:
      tags:
        - ️🗒️ Note
      summary: Create a new note for a developer
      operationId: createNote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                situation_id:
                  type: string
                  format: uuid
                full_text:
                  type: string
                  example: Somewhere over the rainbow.
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  developer_id:
                    type: string
                    format: uuid
                  situation_id:
                    type: string
                    format: uuid
                  situation_name:
                    type: string
                    example: Conference
                  full_text:
                    type: string
                    example: Somewhere over the rainbow.
  "/note/{id}":
    parameters:
      - name: id
        in: path
        description: ID of a specific note
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - ️🗒️ Note
      summary: Read specific note by ID
      operationId: getNoteByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - developer_id
                  - situation_id
                  - full_text
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  developer_id:
                    type: string
                    format: uuid
                  situation_id:
                    type: string
                    format: uuid
                  full_text:
                    type: string
                    example: Somewhere over the rainbow.
    put:
      tags:
        - ️🗒️ Note
      summary: Update specific note by ID
      operationId: updateNote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                situation_id:
                  type: string
                  format: uuid
                full_text:
                  type: string
                  example: Somewhere over the rainbow.
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1note~1%7Bid%7D/get/responses/200/content/applicati\
                  on~1json/schema"
    delete:
      tags:
        - ️🗒️ Note
      summary: Delete specific note by ID
      operationId: deleteNoteByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/note/developer/{id}":
    parameters:
      - name: id
        in: path
        description: ID of a specific developer
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - ️🗒️ Note
      summary: Read notes for specific developer
      operationId: getNoteByDeveloperID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    developer_id:
                      type: string
                      format: uuid
                    situation_id:
                      type: string
                      format: uuid
                    situation_name:
                      type: string
                      example: Theater
                    full_text:
                      type: string
                      example: Somewhere over the rainbow.
  /contribution:
    get:
      tags:
        - 🏗️ Contribution
      summary: Read all available contributions
      operationId: getContributions
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - developer_id
                    - description
                    - capacity_id
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    developer_id:
                      type: string
                      format: uuid
                    contributed_at:
                      type: string
                      format: date-time
                    description:
                      type: string
                      example: Published new book
                    link:
                      type: string
                      example: https://something.com
                    public:
                      type: integer
                      example: 0
                    capacity_id:
                      type: string
                      format: uuid
    post:
      tags:
        - 🏗️ Contribution
      summary: Create a new contribution for a developer
      operationId: createContribution
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                contributed_at:
                  type: string
                  format: date-time
                description:
                  type: string
                  example: Published new book
                link:
                  type: string
                  example: https://something.com
                public:
                  type: integer
                  example: 0
                capacity_id:
                  type: string
                  format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  developer_id:
                    type: string
                    format: uuid
                  contributed_at:
                    type: string
                    format: date-time
                  description:
                    type: string
                    example: Published new book
                  link:
                    type: string
                    example: https://something.com
                  public:
                    type: integer
                    example: 0
                  capacity_id:
                    type: string
                    format: uuid
  "/contribution/{id}":
    parameters:
      - name: id
        in: path
        description: ID of a specific contribution
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🏗️ Contribution
      summary: Read specific contributiony by ID
      operationId: getContributionByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - developer_id
                  - description
                  - capacity_id
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  developer_id:
                    type: string
                    format: uuid
                  contributed_at:
                    type: string
                    format: date-time
                  description:
                    type: string
                    example: Published new book
                  link:
                    type: string
                    example: https://something.com
                  public:
                    type: integer
                    example: 0
                  capacity_id:
                    type: string
                    format: uuid
    put:
      tags:
        - 🏗️ Contribution
      summary: Update specific contribution by ID
      operationId: updateContribution
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                contributed_at:
                  type: string
                  format: date-time
                description:
                  type: string
                  example: Published new book
                link:
                  type: string
                  example: https://something.com
                public:
                  type: integer
                  example: 0
                capacity_id:
                  type: string
                  format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1contribution~1%7Bid%7D/get/responses/200/content/a\
                  pplication~1json/schema"
    delete:
      tags:
        - 🏗️ Contribution
      summary: Delete specific contribution by ID
      operationId: deleteContributionByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/contribution/developer/{id}":
    parameters:
      - name: id
        in: path
        description: ID of a specific developer
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🏗️ Contribution
      summary: Read contributions for specific developer
      operationId: getContributionByDeveloperID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    developer_id:
                      type: string
                      format: uuid
                    contributed_at:
                      type: string
                      format: date-time
                    description:
                      type: string
                      example: Published new book
                    link:
                      type: string
                      example: https://something.com
                    public:
                      type: integer
                      example: 0
                    capacity_id:
                      type: string
                      format: uuid
  "/contribution/{id}/role":
    parameters:
      - name: id
        in: path
        description: ID field for desired contribution
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🏗️ Contribution
      summary: Get roles associated with a contribution by ID
      operationId: getContributionRolesByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    name:
                      type: string
                      example: Cloud
    post:
      tags:
        - 🏗️ Contribution
      summary: Associate a specific contribution with the given role
      operationId: createContributionRole
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                name:
                  type: string
                  example: Cloud
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    contribution_id:
                      type: string
                      format: uuid
                    name:
                      type: string
                      example: Cloud
    put:
      tags:
        - 🏗️ Contribution
      summary: Update contribution association with a given role
      operationId: updateContributionRole
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
                    example: Cloud
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    contribution_id:
                      type: string
                      format: uuid
                    name:
                      type: string
                      example: Cloud
    delete:
      tags:
        - 🏗️ Contribution
      summary: Remove all contribution association with a given role
      operationId: removeContributionRole
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
  "/contribution/{contribution_id}/role/{role_id}":
    parameters:
      - name: contribution_id
        in: path
        description: ID field for desired contribution
        required: true
        schema:
          type: string
          format: uuid
      - name: role_id
        in: path
        description: ID field for the desired role
        required: true
        schema:
          type: string
          format: uuid
    delete:
      tags:
        - 🏗️ Contribution
      summary: Remove a specific role relation for a specific developer
      operationId: removeContributionItemsByRoleID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    contribution_id:
                      type: string
                      format: uuid
                    role_id:
                      type: string
                      format: uuid
  /capacity:
    get:
      tags:
        - 🧱 Capacity
      summary: Read all available capacities
      operationId: getCapacities
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    account_id:
                      type: string
                      format: uuid
                    name:
                      type: string
                      example: Book (Author)
                    color_id:
                      type: string
                      format: uuid
                    weight:
                      type: integer
                      example: 10
                    criteria:
                      type: string
                      example: 1,2,Term,3,4
                    count:
                      type: integer
                      example: 0
    post:
      tags:
        - 🧱 Capacity
      summary: Create a new capacity type
      operationId: createCapacity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Book (Author)
                color_id:
                  type: string
                  format: uuid
                weight:
                  type: integer
                  example: 10
                criteria:
                  type: string
                  example: 1,2,Term,3,4
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - name
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  account_id:
                    type: string
                    format: uuid
                  name:
                    type: string
                    example: Book (Author)
                  color_id:
                    type: string
                    format: uuid
                  weight:
                    type: integer
                    example: 10
                  criteria:
                    type: string
                    example: 1,2,Term,3,4
  "/capacity/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired capacity
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🧱 Capacity
      summary: Read specific capacity by ID
      operationId: getCapacityByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - name
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  account_id:
                    type: string
                    format: uuid
                  name:
                    type: string
                    example: Book (Author)
                  color_id:
                    type: string
                    format: uuid
                  weight:
                    type: integer
                    example: 10
                  criteria:
                    type: string
                    example: 1,2,Term,3,4
    put:
      tags:
        - 🧱 Capacity
      summary: Update specific capacity by ID
      operationId: updateCapacity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Book (Author)
                color_id:
                  type: string
                  format: uuid
                weight:
                  type: integer
                  example: 10
                criteria:
                  type: string
                  example: 1,2,Term,3,4
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1capacity~1%7Bid%7D/get/responses/200/content/appli\
                  cation~1json/schema"
    delete:
      tags:
        - 🧱 Capacity
      summary: Delete specific capacity by ID
      operationId: deleteCapacityByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  /blog:
    get:
      tags:
        - 📓 Blog
      summary: Read all available blog feeds
      operationId: getBlogs
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - developer_id
                    - url
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    developer_id:
                      type: string
                      format: uuid
                    url:
                      type: string
                      example: http://something.com
    post:
      tags:
        - 📓 Blog
      summary: Create a new blog feed source
      operationId: createBlog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                url:
                  type: string
                  example: http://something.com
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1blog/get/responses/200/content/application~1json/s\
                  chema/items"
  "/blog/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired blog feed
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 📓 Blog
      summary: Read specific blog feed by ID
      operationId: getBlogByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - developer_id
                  - url
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  developer_id:
                    type: string
                    format: uuid
                  url:
                    type: string
                    example: http://something.com
    put:
      tags:
        - 📓 Blog
      summary: Update specific blog feed by ID
      operationId: updateBlog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                url:
                  type: string
                  example: http://something.com
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1blog~1%7Bid%7D/get/responses/200/content/applicati\
                  on~1json/schema"
    delete:
      tags:
        - 📓 Blog
      summary: Delete specific blog feed by ID
      operationId: deleteBlogByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  /blog/post:
    get:
      tags:
        - 📓 📝 Blog Post
      summary: Read all available blog posts
      operationId: getBlogPosts
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - blog_id
                    - published_at
                    - guid
                    - link
                    - title
                    - summary
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    blog_id:
                      type: string
                      format: uuid
                    published_at:
                      type: string
                      format: date-time
                    guid:
                      type: string
                      format: uuid
                    link:
                      type: string
                      example: http://something.com
                    title:
                      type: string
                      example: Friends
                    summary:
                      type: string
                      example: How you doin'?!
                    category:
                      type: array
                      items:
                        type: string
                      example:
                        - sitcom
                        - television
                    keywords:
                      type: array
                      items:
                        type: string
                      example:
                        - natural
                        - language
                        - understanding
                    concepts:
                      type: array
                      items:
                        type: string
                      example:
                        - natural
                        - language
                        - understanding
                    entities:
                      type: array
                      items:
                        type: string
                      example:
                        - natural
                        - language
                        - understanding
    post:
      tags:
        - 📓 📝 Blog Post
      summary: Create a new blog post
      operationId: createBlogPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                blog_id:
                  type: string
                  format: uuid
                published_at:
                  type: string
                  format: date-time
                guid:
                  type: string
                  format: uuid
                link:
                  type: string
                  example: http://something.com
                title:
                  type: string
                  example: Friends
                summary:
                  type: string
                  example: How you doin'?!
                category:
                  type: array
                  items:
                    type: string
                  example:
                    - sitcom
                    - television
                keywords:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                concepts:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                entities:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1blog~1post/get/responses/200/content/application~1\
                  json/schema/items"
  "/blog/post/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired blog feed
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 📓 📝 Blog Post
      summary: Read specific blog post by ID
      operationId: getBlogPostByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - blog_id
                  - published_at
                  - guid
                  - link
                  - title
                  - summary
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  blog_id:
                    type: string
                    format: uuid
                  published_at:
                    type: string
                    format: date-time
                  guid:
                    type: string
                    format: uuid
                  link:
                    type: string
                    example: http://something.com
                  title:
                    type: string
                    example: Friends
                  summary:
                    type: string
                    example: How you doin'?!
                  category:
                    type: array
                    items:
                      type: string
                    example:
                      - sitcom
                      - television
                  keywords:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  concepts:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  entities:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
    put:
      tags:
        - 📓 📝 Blog Post
      summary: Update specific blog post by ID
      operationId: updateBlogPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                blog_id:
                  type: string
                  format: uuid
                published_at:
                  type: string
                  format: date-time
                guid:
                  type: string
                  format: uuid
                link:
                  type: string
                  example: http://something.com
                title:
                  type: string
                  example: Friends
                summary:
                  type: string
                  example: How you doin'?!
                category:
                  type: array
                  items:
                    type: string
                  example:
                    - sitcom
                    - television
                keywords:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                concepts:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                entities:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1blog~1post~1%7Bid%7D/get/responses/200/content/app\
                  lication~1json/schema"
    delete:
      tags:
        - 📓 📝 Blog Post
      summary: Delete specific blog post by ID
      operationId: deleteBlogPostByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/blog/post/guid/{id}":
    parameters:
      - name: id
        in: path
        description: GUID field for specific blog post (Base64, UTF-8)
        required: true
        schema:
          type: string
          format: byte
    get:
      tags:
        - 📓 📝 Blog Post
      summary: Read specific blog post by GUID
      operationId: getBlogPostByGUID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - blog_id
                  - published_at
                  - guid
                  - link
                  - title
                  - summary
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  blog_id:
                    type: string
                    format: uuid
                  published_at:
                    type: string
                    format: date-time
                  guid:
                    type: string
                    format: uuid
                  link:
                    type: string
                    example: http://something.com
                  title:
                    type: string
                    example: Friends
                  summary:
                    type: string
                    example: How you doin'?!
                  category:
                    type: array
                    items:
                      type: string
                    example:
                      - sitcom
                      - television
                  keywords:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  concepts:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  entities:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
  "/blog/post/{id}/media":
    parameters:
      - name: id
        in: path
        description: ID field for specific blog post
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 📓 📝 Blog Post
      summary: Read all available media for given blog post
      operationId: getBlogPostMedia
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - url
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    url:
                      type: string
                      example: http://something.com
                    keywords:
                      type: array
                      items:
                        type: string
                      example:
                        - eagle
                        - landed
                        - moon
    post:
      tags:
        - 📓 📝 Blog Post
      summary: Create a new reference between a blog post and media
      operationId: createBlogPostMedia
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                media_id:
                  type: string
                  format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  post_id:
                    type: string
                    format: uuid
                  media_id:
                    type: string
                    format: uuid
  /dev:
    get:
      tags:
        - 🔥 Dev
      summary: Read all available DEV Community accounts
      operationId: getDevCommunity
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - developer_id
                    - user_name
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    developer_id:
                      type: string
                      format: uuid
                    user_name:
                      type: string
                      example: boneskull
    post:
      tags:
        - 🔥 Dev
      summary: Create a new DEV Community account
      operationId: createDevCommunity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                user_name:
                  type: string
                  example: boneskull
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1dev/get/responses/200/content/application~1json/sc\
                  hema/items"
  "/dev/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired DEV Community account
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🔥 Dev
      summary: Read specific DEV Community account by ID
      operationId: getDevCommunityID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - developer_id
                  - user_name
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  developer_id:
                    type: string
                    format: uuid
                  user_name:
                    type: string
                    example: boneskull
    put:
      tags:
        - 🔥 Dev
      summary: Update specific DEV Community account by ID
      operationId: updateDevCommunity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                user_name:
                  type: string
                  example: boneskull
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1dev~1%7Bid%7D/get/responses/200/content/applicatio\
                  n~1json/schema"
    delete:
      tags:
        - 🔥 Dev
      summary: Delete specific DEV Community account by ID
      operationId: deleteDevCommunityID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  /dev/post:
    get:
      tags:
        - 🔥 📝 Dev Post
      summary: Read all available DEV Community posts
      operationId: getDevCommunityPosts
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - dev_id
                    - published_at
                    - guid
                    - article
                    - link
                    - title
                    - summary
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    dev_id:
                      type: string
                      format: uuid
                    published_at:
                      type: string
                      format: date-time
                    guid:
                      type: string
                      format: uuid
                    article:
                      type: integer
                      example: 172031
                    link:
                      type: string
                      example: http://something.com
                    title:
                      type: string
                      example: Friends
                    summary:
                      type: string
                      example: How you doin'?!
                    likes:
                      type: integer
                      example: 0
                    reading:
                      type: integer
                      example: 0
                    unicorn:
                      type: integer
                      example: 0
                    keywords:
                      type: array
                      items:
                        type: string
                      example:
                        - natural
                        - language
                        - understanding
                    concepts:
                      type: array
                      items:
                        type: string
                      example:
                        - natural
                        - language
                        - understanding
                    entities:
                      type: array
                      items:
                        type: string
                      example:
                        - natural
                        - language
                        - understanding
    post:
      tags:
        - 🔥 📝 Dev Post
      summary: Create a new account post
      operationId: createDevCommunityPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dev_id:
                  type: string
                  format: uuid
                published_at:
                  type: string
                  format: date-time
                guid:
                  type: string
                  format: uuid
                article:
                  type: integer
                  example: 172031
                link:
                  type: string
                  example: http://something.com
                title:
                  type: string
                  example: Friends
                summary:
                  type: string
                  example: How you doin'?!
                likes:
                  type: integer
                  example: 0
                reading:
                  type: integer
                  example: 0
                unicorn:
                  type: integer
                  example: 0
                keywords:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                concepts:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                entities:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1dev~1post/get/responses/200/content/application~1j\
                  son/schema/items"
  "/dev/post/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired account posts
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🔥 📝 Dev Post
      summary: Read specific account post by ID
      operationId: getDevCommunityPostByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - dev_id
                  - published_at
                  - guid
                  - article
                  - link
                  - title
                  - summary
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  dev_id:
                    type: string
                    format: uuid
                  published_at:
                    type: string
                    format: date-time
                  guid:
                    type: string
                    format: uuid
                  article:
                    type: integer
                    example: 172031
                  link:
                    type: string
                    example: http://something.com
                  title:
                    type: string
                    example: Friends
                  summary:
                    type: string
                    example: How you doin'?!
                  likes:
                    type: integer
                    example: 0
                  reading:
                    type: integer
                    example: 0
                  unicorn:
                    type: integer
                    example: 0
                  keywords:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  concepts:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  entities:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
    put:
      tags:
        - 🔥 📝 Dev Post
      summary: Update specific account post by ID
      operationId: updateDevCommunityPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dev_id:
                  type: string
                  format: uuid
                published_at:
                  type: string
                  format: date-time
                guid:
                  type: string
                  format: uuid
                article:
                  type: integer
                  example: 172031
                link:
                  type: string
                  example: http://something.com
                title:
                  type: string
                  example: Friends
                summary:
                  type: string
                  example: How you doin'?!
                likes:
                  type: integer
                  example: 0
                reading:
                  type: integer
                  example: 0
                unicorn:
                  type: integer
                  example: 0
                keywords:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                concepts:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                entities:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1dev~1post~1%7Bid%7D/get/responses/200/content/appl\
                  ication~1json/schema"
    delete:
      tags:
        - 🔥 📝 Dev Post
      summary: Delete specific account post by ID
      operationId: deleteDevCommunityPostByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/dev/post/guid/{id}":
    parameters:
      - name: id
        in: path
        description: GUID field for specific account post (Base64, UTF-8)
        required: true
        schema:
          type: string
          format: byte
    get:
      tags:
        - 🔥 📝 Dev Post
      summary: Read specific account post by GUID
      operationId: getDevCommunityPostByGUID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - dev_id
                  - published_at
                  - guid
                  - article
                  - link
                  - title
                  - summary
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  dev_id:
                    type: string
                    format: uuid
                  published_at:
                    type: string
                    format: date-time
                  guid:
                    type: string
                    format: uuid
                  article:
                    type: integer
                    example: 172031
                  link:
                    type: string
                    example: http://something.com
                  title:
                    type: string
                    example: Friends
                  summary:
                    type: string
                    example: How you doin'?!
                  likes:
                    type: integer
                    example: 0
                  reading:
                    type: integer
                    example: 0
                  unicorn:
                    type: integer
                    example: 0
                  keywords:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  concepts:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  entities:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
  "/dev/post/{id}/media":
    parameters:
      - name: id
        in: path
        description: ID field for specific account post
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🔥 📝 Dev Post
      summary: Read all available media for given account post
      operationId: getDevCommunityPostMedia
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/paths/~1blog~1post~1%7Bid%7D~1media/get/responses/200/co\
                    ntent/application~1json/schema/items"
    post:
      tags:
        - 🔥 📝 Dev Post
      summary: Create a new reference between an account post and media
      operationId: createDevCommunityPostMedia
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                media_id:
                  type: string
                  format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  post_id:
                    type: string
                    format: uuid
                  media_id:
                    type: string
                    format: uuid
  /github:
    get:
      tags:
        - 🐙 GitHub
      summary: Read all available GitHub accounts
      operationId: getGitHubs
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - developer_id
                    - login
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    developer_id:
                      type: string
                      format: uuid
                    login:
                      type: string
                      example: krhoyt
                    name:
                      type: string
                      example: Kevin Hoyt
                    company:
                      type: string
                      example: IBM
                    blog:
                      type: string
                      example: http://something.com
                    location:
                      type: string
                      example: The Interwebs!
                    email:
                      type: string
                      example: krhoyt@us.ibm.com
                    hireable:
                      type: boolean
                      example: 0
                    repositories:
                      type: integer
                      example: 0
                    gists:
                      type: integer
                      example: 0
                    followers:
                      type: integer
                      example: 0
                    following:
                      type: integer
                      example: 0
    post:
      tags:
        - 🐙 GitHub
      summary: Create a new GitHub account
      operationId: createGitHub
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                login:
                  type: string
                  example: krhoyt
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1github/get/responses/200/content/application~1json\
                  /schema/items"
  "/github/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired GitHub account
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🐙 GitHub
      summary: Read specific GitHub acount by ID
      operationId: getGitHubByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - developer_id
                  - login
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  developer_id:
                    type: string
                    format: uuid
                  login:
                    type: string
                    example: krhoyt
                  name:
                    type: string
                    example: Kevin Hoyt
                  company:
                    type: string
                    example: IBM
                  blog:
                    type: string
                    example: http://something.com
                  location:
                    type: string
                    example: The Interwebs!
                  email:
                    type: string
                    example: krhoyt@us.ibm.com
                  hireable:
                    type: boolean
                    example: 0
                  repositories:
                    type: integer
                    example: 0
                  gists:
                    type: integer
                    example: 0
                  followers:
                    type: integer
                    example: 0
                  following:
                    type: integer
                    example: 0
    patch:
      tags:
        - 🐙 GitHub
      summary: Update GitHub account based on API data
      operationId: updateGitHubAccount
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1github~1%7Bid%7D/get/responses/200/content/applica\
                  tion~1json/schema"
    put:
      tags:
        - 🐙 GitHub
      summary: Update specific GitHub account by ID
      operationId: updateGitHub
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                login:
                  type: string
                  example: krhoyt
                name:
                  type: string
                  example: Kevin Hoyt
                company:
                  type: string
                  example: IBM
                blog:
                  type: string
                  example: http://something.com
                location:
                  type: string
                  example: The Interwebs!
                email:
                  type: string
                  example: krhoyt@us.ibm.com
                hireable:
                  type: boolean
                  example: 0
                repositories:
                  type: integer
                  example: 0
                gists:
                  type: integer
                  example: 0
                followers:
                  type: integer
                  example: 0
                following:
                  type: integer
                  example: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1github~1%7Bid%7D/get/responses/200/content/applica\
                  tion~1json/schema"
    delete:
      tags:
        - 🐙 GitHub
      summary: Delete specific GitHub account by ID
      operationId: deleteGitHubByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  /github/event:
    get:
      tags:
        - 🐙 🐱 GitHub Event
      summary: Read all available GitHub events
      operationId: getGitHubEvent
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - github_id
                    - published_at
                    - event
                    - event_name
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    github_id:
                      type: string
                      format: uuid
                    published_at:
                      type: string
                      format: date-time
                    event:
                      type: integer
                      example: 0
                    event_name:
                      type: string
                      example: CommentEvent
                    repository:
                      type: integer
                      example: 0
                    repository_name:
                      type: string
                      example: phenomnomnominal/betterer
    post:
      tags:
        - 🐙 🐱 GitHub Event
      summary: Create a new GitHub event
      operationId: createGitHubEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                github_id:
                  type: string
                  format: uuid
                published_at:
                  type: string
                  format: date-time
                event:
                  type: integer
                  example: 0
                event_name:
                  type: string
                  example: CommentEvent
                repository:
                  type: integer
                  example: 0
                repository_name:
                  type: string
                  example: phenomnomnominal/betterer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1github~1event/get/responses/200/content/applicatio\
                  n~1json/schema/items"
  "/github/event/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired GitHub event
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🐙 🐱 GitHub Event
      summary: Read specific GitHub event by ID
      operationId: getGitHubEventByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - github_id
                  - published_at
                  - event
                  - event_name
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  github_id:
                    type: string
                    format: uuid
                  published_at:
                    type: string
                    format: date-time
                  event:
                    type: integer
                    example: 0
                  event_name:
                    type: string
                    example: CommentEvent
                  repository:
                    type: integer
                    example: 0
                  repository_name:
                    type: string
                    example: phenomnomnominal/betterer
    put:
      tags:
        - 🐙 🐱 GitHub Event
      summary: Update specific GitHub event by ID
      operationId: updateGitHubEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                github_id:
                  type: string
                  format: uuid
                published_at:
                  type: string
                  format: date-time
                event:
                  type: integer
                  example: 0
                event_name:
                  type: string
                  example: CommentEvent
                repository:
                  type: integer
                  example: 0
                repository_name:
                  type: string
                  example: phenomnomnominal/betterer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1github~1event~1%7Bid%7D/get/responses/200/content/\
                  application~1json/schema"
    delete:
      tags:
        - 🐙 🐱 GitHub Event
      summary: Delete specific GitHub event by ID
      operationId: deleteGitHubEventByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/github/event/id/{id}":
    parameters:
      - name: id
        in: path
        description: GitHub event ID
        required: true
        schema:
          type: string
          format: "10470753840"
    get:
      tags:
        - 🐙 🐱 GitHub Event
      summary: Read specific GitHub event by GitHub event ID
      operationId: getGitHubEventByEventID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - github_id
                  - published_at
                  - event
                  - event_name
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  github_id:
                    type: string
                    format: uuid
                  published_at:
                    type: string
                    format: date-time
                  event:
                    type: integer
                    example: 0
                  event_name:
                    type: string
                    example: CommentEvent
                  repository:
                    type: integer
                    example: 0
                  repository_name:
                    type: string
                    example: phenomnomnominal/betterer
  "/github/activity/{login}":
    parameters:
      - name: login
        in: path
        description: Login of GitHub account
        required: true
        schema:
          type: string
          example: krhoyt
    get:
      tags:
        - 🐙 GitHub
      summary: Get events for specific GitHub login
      operationId: getGitHubActivity
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  "/github/repository/{name}":
    parameters:
      - name: name
        in: path
        description: Path to repository (without URL)
        required: true
        schema:
          type: string
          format: byte
    get:
      tags:
        - 🐙 GitHub
      summary: Get details about a repository
      operationId: getGitHubRepository
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
  /instagram:
    get:
      tags:
        - 📸 Instagram
      summary: Read all available accounts
      operationId: getInstagram
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - developer_id
                    - profile
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    developer_id:
                      type: string
                      format: uuid
                    profile:
                      type: string
                      example: parkerkrhoyt
    post:
      tags:
        - 📸 Instagram
      summary: Create a new Instagram account
      operationId: createInstagram
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                profile:
                  type: string
                  example: parkerkrhoyt
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1instagram/get/responses/200/content/application~1j\
                  son/schema/items"
  "/instagram/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired account
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 📸 Instagram
      summary: Read specific account by ID
      operationId: getInstagramByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - developer_id
                  - profile
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  developer_id:
                    type: string
                    format: uuid
                  profile:
                    type: string
                    example: parkerkrhoyt
    put:
      tags:
        - 📸 Instagram
      summary: Update specific account by ID
      operationId: updateInstagram
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                profile:
                  type: string
                  example: parkerkrhoyt
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1instagram~1%7Bid%7D/get/responses/200/content/appl\
                  ication~1json/schema"
    delete:
      tags:
        - 📸 Instagram
      summary: Delete specific account by ID
      operationId: deleteInstagramByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  /linkedin:
    get:
      tags:
        - 📇 LinkedIn
      summary: Read all available accounts
      operationId: getLinkedIn
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - developer_id
                    - profile
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    developer_id:
                      type: string
                      format: uuid
                    profile:
                      type: string
                      example: parkerkrhoyt
    post:
      tags:
        - 📇 LinkedIn
      summary: Create a new LinkedIn account
      operationId: createLinkedIn
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                profile:
                  type: string
                  example: parkerkrhoyt
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1linkedin/get/responses/200/content/application~1js\
                  on/schema/items"
  "/linkedin/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired account
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 📇 LinkedIn
      summary: Read specific account by ID
      operationId: getLinkedInByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - developer_id
                  - profile
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  developer_id:
                    type: string
                    format: uuid
                  profile:
                    type: string
                    example: parkerkrhoyt
    put:
      tags:
        - 📇 LinkedIn
      summary: Update specific account by ID
      operationId: updateLinkedIn
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                profile:
                  type: string
                  example: parkerkrhoyt
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1linkedin~1%7Bid%7D/get/responses/200/content/appli\
                  cation~1json/schema"
    delete:
      tags:
        - 📇 LinkedIn
      summary: Delete specific account by ID
      operationId: deleteLinkedInByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  /medium:
    get:
      tags:
        - 🔮 Medium
      summary: Read all available Medium feeds
      operationId: getMediums
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - developer_id
                    - user_name
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    developer_id:
                      type: string
                      format: uuid
                    user_name:
                      type: string
                      example: boneskull
                    following:
                      type: integer
                      example: 0
                    followed_by:
                      type: integer
                      example: 0
    post:
      tags:
        - 🔮 Medium
      summary: Create a new Medium account
      operationId: createMedium
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                user_name:
                  type: string
                  example: boneskull
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1medium/get/responses/200/content/application~1json\
                  /schema/items"
  "/medium/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired Medium feed
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🔮 Medium
      summary: Read specific Medium feed by ID
      operationId: getMediumByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - developer_id
                  - user_name
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  developer_id:
                    type: string
                    format: uuid
                  user_name:
                    type: string
                    example: boneskull
                  following:
                    type: integer
                    example: 0
                  followed_by:
                    type: integer
                    example: 0
    patch:
      tags:
        - 🔮 Medium
      summary: Update Medium account based on scraping
      operationId: updateMediumUser
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1medium~1%7Bid%7D/get/responses/200/content/applica\
                  tion~1json/schema"
    put:
      tags:
        - 🔮 Medium
      summary: Update specific Medium feed by ID
      operationId: updateMedium
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                user_name:
                  type: string
                  example: boneskull
                following:
                  type: integer
                  example: 0
                followed_by:
                  type: integer
                  example: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1medium~1%7Bid%7D/get/responses/200/content/applica\
                  tion~1json/schema"
    delete:
      tags:
        - 🔮 Medium
      summary: Delete specific Medium feed by ID
      operationId: deleteMediumByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  /medium/post:
    get:
      tags:
        - 🔮 📝 Medium Post
      summary: Read all available account posts
      operationId: getMediumPosts
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - medium_id
                    - published_at
                    - guid
                    - link
                    - title
                    - summary
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    medium_id:
                      type: string
                      format: uuid
                    published_at:
                      type: string
                      format: date-time
                    guid:
                      type: string
                      format: uuid
                    link:
                      type: string
                      example: http://something.com
                    title:
                      type: string
                      example: Friends
                    summary:
                      type: string
                      example: How you doin'?!
                    claps:
                      type: integer
                      example: 0
                    category:
                      type: array
                      items:
                        type: string
                      example:
                        - sitcom
                        - television
                    keywords:
                      type: array
                      items:
                        type: string
                      example:
                        - natural
                        - language
                        - understanding
                    concepts:
                      type: array
                      items:
                        type: string
                      example:
                        - natural
                        - language
                        - understanding
                    entities:
                      type: array
                      items:
                        type: string
                      example:
                        - natural
                        - language
                        - understanding
    post:
      tags:
        - 🔮 📝 Medium Post
      summary: Create a new Medium account post
      operationId: createMediumPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                medium_id:
                  type: string
                  format: uuid
                published_at:
                  type: string
                  format: date-time
                guid:
                  type: string
                  format: uuid
                link:
                  type: string
                  example: http://something.com
                title:
                  type: string
                  example: Friends
                summary:
                  type: string
                  example: How you doin'?!
                claps:
                  type: integer
                  example: 0
                category:
                  type: array
                  items:
                    type: string
                  example:
                    - sitcom
                    - television
                keywords:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                concepts:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                entities:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1medium~1post/get/responses/200/content/application\
                  ~1json/schema/items"
  "/medium/post/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired Medium post
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🔮 📝 Medium Post
      summary: Read specific Medium post by ID
      operationId: getMediumPostByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - medium_id
                  - published_at
                  - guid
                  - link
                  - title
                  - summary
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  medium_id:
                    type: string
                    format: uuid
                  published_at:
                    type: string
                    format: date-time
                  guid:
                    type: string
                    format: uuid
                  link:
                    type: string
                    example: http://something.com
                  title:
                    type: string
                    example: Friends
                  summary:
                    type: string
                    example: How you doin'?!
                  claps:
                    type: integer
                    example: 0
                  category:
                    type: array
                    items:
                      type: string
                    example:
                      - sitcom
                      - television
                  keywords:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  concepts:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  entities:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
    put:
      tags:
        - 🔮 📝 Medium Post
      summary: Update specific Medium post by ID
      operationId: updateMediumPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                medium_id:
                  type: string
                  format: uuid
                published_at:
                  type: string
                  format: date-time
                guid:
                  type: string
                  format: uuid
                link:
                  type: string
                  example: http://something.com
                title:
                  type: string
                  example: Friends
                summary:
                  type: string
                  example: How you doin'?!
                claps:
                  type: integer
                  example: 0
                category:
                  type: array
                  items:
                    type: string
                  example:
                    - sitcom
                    - television
                keywords:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                concepts:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                entities:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1medium~1post~1%7Bid%7D/get/responses/200/content/a\
                  pplication~1json/schema"
    delete:
      tags:
        - 🔮 📝 Medium Post
      summary: Delete specific Medium post by ID
      operationId: deleteMediumPostByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/medium/post/guid/{id}":
    parameters:
      - name: id
        in: path
        description: GUID field for specific Medium post (Base64, UTF-8)
        required: true
        schema:
          type: string
          format: byte
    get:
      tags:
        - 🔮 📝 Medium Post
      summary: Read specific Medium post by GUID
      operationId: getMediumPostByGUID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - medium_id
                  - published_at
                  - guid
                  - link
                  - title
                  - summary
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  medium_id:
                    type: string
                    format: uuid
                  published_at:
                    type: string
                    format: date-time
                  guid:
                    type: string
                    format: uuid
                  link:
                    type: string
                    example: http://something.com
                  title:
                    type: string
                    example: Friends
                  summary:
                    type: string
                    example: How you doin'?!
                  claps:
                    type: integer
                    example: 0
                  category:
                    type: array
                    items:
                      type: string
                    example:
                      - sitcom
                      - television
                  keywords:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  concepts:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  entities:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
  "/medium/post/{id}/media":
    parameters:
      - name: id
        in: path
        description: ID field for specific Medium post
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🔮 📝 Medium Post
      summary: Read all available media for given Medium post
      operationId: getMediumPostMedia
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/paths/~1blog~1post~1%7Bid%7D~1media/get/responses/200/co\
                    ntent/application~1json/schema/items"
    post:
      tags:
        - 🔮 📝 Medium Post
      summary: Create a new reference between a Medium post and media
      operationId: createMediumPostMedia
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                media_id:
                  type: string
                  format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  post_id:
                    type: string
                    format: uuid
                  media_id:
                    type: string
                    format: uuid
  /reddit:
    get:
      tags:
        - 👽 Reddit
      summary: Read all available Reddit accounts
      operationId: getReddits
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - developer_id
                    - name
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    developer_id:
                      type: string
                      format: uuid
                    user:
                      type: string
                      example: u19t6
                    name:
                      type: string
                      example: Tokyono
                    joined_at:
                      type: string
                      format: date-time
                    image:
                      type: string
                      example: http://something.com
                    link:
                      type: integer
                      example: 0
                    comment:
                      type: integer
                      example: 0
    post:
      tags:
        - 👽 Reddit
      summary: Create a new Reddit account
      operationId: createReddit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                name:
                  type: string
                  example: krhoyt
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1reddit/get/responses/200/content/application~1json\
                  /schema/items"
  "/reddit/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired Reddit account
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 👽 Reddit
      summary: Read specific Reddit account by ID
      operationId: getRedditByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - developer_id
                  - name
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  developer_id:
                    type: string
                    format: uuid
                  user:
                    type: string
                    example: u19t6
                  name:
                    type: string
                    example: Tokyono
                  joined_at:
                    type: string
                    format: date-time
                  image:
                    type: string
                    example: http://something.com
                  link:
                    type: integer
                    example: 0
                  comment:
                    type: integer
                    example: 0
    patch:
      tags:
        - 👽 Reddit
      summary: Update Reddit account based on API data
      operationId: updateRedditAccount
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1reddit~1%7Bid%7D/get/responses/200/content/applica\
                  tion~1json/schema"
    put:
      tags:
        - 👽 Reddit
      summary: Update specific Reddit account by ID
      operationId: updateReddit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                user:
                  type: string
                  example: u19t6
                name:
                  type: string
                  example: Tokyono
                joined_at:
                  type: string
                  format: date-time
                image:
                  type: string
                  example: http://something.com
                link:
                  type: integer
                  example: 0
                comment:
                  type: integer
                  example: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1reddit~1%7Bid%7D/get/responses/200/content/applica\
                  tion~1json/schema"
    delete:
      tags:
        - 👽 Reddit
      summary: Delete specific Reddit account by ID
      operationId: deleteRedditByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  /reddit/post:
    get:
      tags:
        - 👽 📝 Reddit Post
      summary: Read all available Reddit posts
      operationId: getRedditPosts
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - reddit_id
                    - published_at
                    - guid
                    - title
                    - body
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    reddit_id:
                      type: string
                      format: uuid
                    published_at:
                      type: string
                      format: date-time
                    guid:
                      type: string
                      example: f1vb4nq
                    author:
                      type: string
                      example: Sipredion
                    title:
                      type: string
                      example: How about that?
                    body:
                      type: string
                      example: This is my opinion.
                    comments:
                      type: integer
                      example: 0
                    score:
                      type: integer
                      example: 0
                    ups:
                      type: integer
                      example: 0
                    downs:
                      type: integer
                      example: 0
                    parent:
                      type: string
                      example: t1_f1v83vi
                    subreddit:
                      type: string
                      example: worldnews
                    owner:
                      type: string
                      example: vannybros
                    link:
                      type: string
                      example: http://something.com
    post:
      tags:
        - 👽 📝 Reddit Post
      summary: Create a new Reddit post
      operationId: createRedditPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reddit_id:
                  type: string
                  format: uuid
                published_at:
                  type: string
                  format: date-time
                guid:
                  type: string
                  example: f1vb4nq
                author:
                  type: string
                  example: Sipredion
                title:
                  type: string
                  example: How about that?
                body:
                  type: string
                  example: This is my opinion.
                comments:
                  type: integer
                  example: 0
                score:
                  type: integer
                  example: 0
                ups:
                  type: integer
                  example: 0
                downs:
                  type: integer
                  example: 0
                parent:
                  type: string
                  example: t1_f1v83vi
                subreddit:
                  type: string
                  example: worldnews
                owner:
                  type: string
                  example: vannybros
                link:
                  type: string
                  example: http://something.com
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1reddit~1post/get/responses/200/content/application\
                  ~1json/schema/items"
  "/reddit/post/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired Reddit post
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 👽 📝 Reddit Post
      summary: Read specific Reddit post by ID
      operationId: getRedditPostByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - reddit_id
                  - published_at
                  - guid
                  - title
                  - body
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  reddit_id:
                    type: string
                    format: uuid
                  published_at:
                    type: string
                    format: date-time
                  guid:
                    type: string
                    example: f1vb4nq
                  author:
                    type: string
                    example: Sipredion
                  title:
                    type: string
                    example: How about that?
                  body:
                    type: string
                    example: This is my opinion.
                  comments:
                    type: integer
                    example: 0
                  score:
                    type: integer
                    example: 0
                  ups:
                    type: integer
                    example: 0
                  downs:
                    type: integer
                    example: 0
                  parent:
                    type: string
                    example: t1_f1v83vi
                  subreddit:
                    type: string
                    example: worldnews
                  owner:
                    type: string
                    example: vannybros
                  link:
                    type: string
                    example: http://something.com
    put:
      tags:
        - 👽 📝 Reddit Post
      summary: Update specific Reddit post by ID
      operationId: updateRedditPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reddit_id:
                  type: string
                  format: uuid
                published_at:
                  type: string
                  format: date-time
                guid:
                  type: string
                  example: f1vb4nq
                author:
                  type: string
                  example: Sipredion
                title:
                  type: string
                  example: How about that?
                body:
                  type: string
                  example: This is my opinion.
                comments:
                  type: integer
                  example: 0
                score:
                  type: integer
                  example: 0
                ups:
                  type: integer
                  example: 0
                downs:
                  type: integer
                  example: 0
                parent:
                  type: string
                  example: t1_f1v83vi
                subreddit:
                  type: string
                  example: worldnews
                owner:
                  type: string
                  example: vannybros
                link:
                  type: string
                  example: http://something.com
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1reddit~1post~1%7Bid%7D/get/responses/200/content/a\
                  pplication~1json/schema"
    delete:
      tags:
        - 👽 📝 Reddit Post
      summary: Delete specific Reddit post by ID
      operationId: deleteRedditPostByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/reddit/post/guid/{id}":
    parameters:
      - name: id
        in: path
        description: Reddit ID field for specific post
        required: true
        schema:
          type: string
          format: byte
    get:
      tags:
        - 👽 📝 Reddit Post
      summary: Read specific Reddit post by ID
      operationId: getRedditPostByGUID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - reddit_id
                  - published_at
                  - guid
                  - title
                  - body
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  reddit_id:
                    type: string
                    format: uuid
                  published_at:
                    type: string
                    format: date-time
                  guid:
                    type: string
                    example: f1vb4nq
                  author:
                    type: string
                    example: Sipredion
                  title:
                    type: string
                    example: How about that?
                  body:
                    type: string
                    example: This is my opinion.
                  comments:
                    type: integer
                    example: 0
                  score:
                    type: integer
                    example: 0
                  ups:
                    type: integer
                    example: 0
                  downs:
                    type: integer
                    example: 0
                  parent:
                    type: string
                    example: t1_f1v83vi
                  subreddit:
                    type: string
                    example: worldnews
                  owner:
                    type: string
                    example: vannybros
                  link:
                    type: string
                    example: http://something.com
  /so:
    get:
      tags:
        - 📚 Stack Overflow
      summary: Read all available Stack Overflow accounts
      operationId: getStacks
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - developer_id
                    - account
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    developer_id:
                      type: string
                      format: uuid
                    user:
                      type: integer
                      example: 11919256
                    account:
                      type: integer
                      example: 14905500
                    joined_at:
                      type: string
                      format: date-time
                    reputation:
                      type: integer
                      example: 0
                    accept_rate:
                      type: integer
                      example: 0
                    name:
                      type: string
                      example: krhoyt
                    location:
                      type: string
                      example: The Interwebs!
                    website:
                      type: string
                      example: http://something.com
                    link:
                      type: string
                      example: http://something.com
                    image:
                      type: string
                      example: http://something.com
    post:
      tags:
        - 📚 Stack Overflow
      summary: Create a new Stack Overflow account
      operationId: createStack
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                user:
                  type: integer
                  example: 11919256
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1so/get/responses/200/content/application~1json/sch\
                  ema/items"
  "/so/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired Stack Overflow account
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 📚 Stack Overflow
      summary: Read specific Stack Overflow acount by ID
      operationId: getStackByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - developer_id
                  - account
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  developer_id:
                    type: string
                    format: uuid
                  user:
                    type: integer
                    example: 11919256
                  account:
                    type: integer
                    example: 14905500
                  joined_at:
                    type: string
                    format: date-time
                  reputation:
                    type: integer
                    example: 0
                  accept_rate:
                    type: integer
                    example: 0
                  name:
                    type: string
                    example: krhoyt
                  location:
                    type: string
                    example: The Interwebs!
                  website:
                    type: string
                    example: http://something.com
                  link:
                    type: string
                    example: http://something.com
                  image:
                    type: string
                    example: http://something.com
    patch:
      tags:
        - 📚 Stack Overflow
      summary: Update Stack Overflow account based on API data
      operationId: updateStackUser
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1so~1%7Bid%7D/get/responses/200/content/application\
                  ~1json/schema"
    put:
      tags:
        - 📚 Stack Overflow
      summary: Update specific Stack Overflow account by ID
      operationId: updateStack
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                user:
                  type: integer
                  example: 11919256
                account:
                  type: integer
                  example: 14905500
                joined_at:
                  type: string
                  format: date-time
                reputation:
                  type: integer
                  example: 0
                accept_rate:
                  type: integer
                  example: 0
                name:
                  type: string
                  example: krhoyt
                location:
                  type: string
                  example: The Interwebs!
                website:
                  type: string
                  example: http://something.com
                link:
                  type: string
                  example: http://something.com
                image:
                  type: string
                  example: http://something.com
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1so~1%7Bid%7D/get/responses/200/content/application\
                  ~1json/schema"
    delete:
      tags:
        - 📚 Stack Overflow
      summary: Delete specific Stack Overflow account by ID
      operationId: deleteStackByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  /so/answer:
    get:
      tags:
        - 📚 ✋ Stack Overflow Answer
      summary: Read all available Stack Overflow answers
      operationId: getStackAnswerAll
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - so_id
                    - answer
                    - question
                    - active_at
                    - accepted
                    - score
                    - views
                    - link
                    - title
                    - tags
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    so_id:
                      type: string
                      format: uuid
                    answer:
                      type: integer
                      example: 56961215
                    question:
                      type: integer
                      example: 56960996
                    active_at:
                      type: string
                      format: date-time
                    accepted:
                      type: integer
                      example: 0
                    score:
                      type: integer
                      example: 0
                    views:
                      type: integer
                      example: 0
                    link:
                      type: string
                      example: http://something.com
                    title:
                      type: string
                      example: How do I do this?
                    tags:
                      type: array
                      items:
                        type: string
                      example:
                        - some
                        - technology
                        - here
                    keywords:
                      type: array
                      items:
                        type: string
                      example:
                        - natural
                        - language
                        - understanding
                    concepts:
                      type: array
                      items:
                        type: string
                      example:
                        - natural
                        - language
                        - understanding
                    entities:
                      type: array
                      items:
                        type: string
                      example:
                        - natural
                        - language
                        - understanding
    post:
      tags:
        - 📚 ✋ Stack Overflow Answer
      summary: Create a new answer
      operationId: createStackAnswer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                so_id:
                  type: string
                  format: uuid
                answer:
                  type: integer
                  example: 56961215
                question:
                  type: integer
                  example: 56960996
                active_at:
                  type: string
                  format: date-time
                accepted:
                  type: integer
                  example: 0
                score:
                  type: integer
                  example: 0
                views:
                  type: integer
                  example: 0
                link:
                  type: string
                  example: http://something.com
                title:
                  type: string
                  example: How do I do this?
                tags:
                  type: array
                  items:
                    type: string
                  example:
                    - some
                    - technology
                    - here
                keywords:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                concepts:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                entities:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1so~1answer/get/responses/200/content/application~1\
                  json/schema/items"
  "/so/answer/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired answer
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 📚 ✋ Stack Overflow Answer
      summary: Read specific answer by ID
      operationId: getStackAnswerByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - so_id
                  - answer
                  - question
                  - active_at
                  - accepted
                  - score
                  - views
                  - link
                  - title
                  - tags
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  so_id:
                    type: string
                    format: uuid
                  answer:
                    type: integer
                    example: 56961215
                  question:
                    type: integer
                    example: 56960996
                  active_at:
                    type: string
                    format: date-time
                  accepted:
                    type: integer
                    example: 0
                  score:
                    type: integer
                    example: 0
                  views:
                    type: integer
                    example: 0
                  link:
                    type: string
                    example: http://something.com
                  title:
                    type: string
                    example: How do I do this?
                  tags:
                    type: array
                    items:
                      type: string
                    example:
                      - some
                      - technology
                      - here
                  keywords:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  concepts:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  entities:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
    put:
      tags:
        - 📚 ✋ Stack Overflow Answer
      summary: Update specific answer by ID
      operationId: updateStackAnswer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                so_id:
                  type: string
                  format: uuid
                answer:
                  type: integer
                  example: 56961215
                question:
                  type: integer
                  example: 56960996
                active_at:
                  type: string
                  format: date-time
                accepted:
                  type: integer
                  example: 0
                score:
                  type: integer
                  example: 0
                views:
                  type: integer
                  example: 0
                link:
                  type: string
                  example: http://something.com
                title:
                  type: string
                  example: How do I do this?
                tags:
                  type: array
                  items:
                    type: string
                  example:
                    - some
                    - technology
                    - here
                keywords:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                concepts:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
                entities:
                  type: array
                  items:
                    type: string
                  example:
                    - natural
                    - language
                    - understanding
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1so~1answer~1%7Bid%7D/get/responses/200/content/app\
                  lication~1json/schema"
    delete:
      tags:
        - 📚 ✋ Stack Overflow Answer
      summary: Delete specific answer by ID
      operationId: deleteStackAnswerByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/so/answer/id/{id}":
    parameters:
      - name: id
        in: path
        description: Stack Overflow answer ID
        required: true
        schema:
          type: string
          example: "56961215"
    get:
      tags:
        - 📚 ✋ Stack Overflow Answer
      summary: Read specific answer by ID
      operationId: getStackAnswerByAnswerID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - so_id
                  - answer
                  - question
                  - active_at
                  - accepted
                  - score
                  - views
                  - link
                  - title
                  - tags
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  so_id:
                    type: string
                    format: uuid
                  answer:
                    type: integer
                    example: 56961215
                  question:
                    type: integer
                    example: 56960996
                  active_at:
                    type: string
                    format: date-time
                  accepted:
                    type: integer
                    example: 0
                  score:
                    type: integer
                    example: 0
                  views:
                    type: integer
                    example: 0
                  link:
                    type: string
                    example: http://something.com
                  title:
                    type: string
                    example: How do I do this?
                  tags:
                    type: array
                    items:
                      type: string
                    example:
                      - some
                      - technology
                      - here
                  keywords:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  concepts:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
                  entities:
                    type: array
                    items:
                      type: string
                    example:
                      - natural
                      - language
                      - understanding
  "/so/answers/{user_id}":
    parameters:
      - name: user_id
        in: path
        description: Stack Overflow user ID
        required: true
        schema:
          type: string
          example: "1146762"
    get:
      tags:
        - 📚 Stack Overflow
      summary: Get answers made by specific Stack Overflow account
      operationId: getStackAnswers
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  "/so/question/id/{id}":
    parameters:
      - name: id
        in: path
        description: Stack Overflow question ID
        required: true
        schema:
          type: string
          example: "38583348"
    get:
      tags:
        - 📚 ❓ Stack Overflow Question
      summary: Read specific question by ID
      operationId: getStackQuestionByQuestionID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  tags:
                    type: array
                    items:
                      type: string
                    example:
                      - python
                      - ibm
                      - serverless
                  owner:
                    type: object
                  is_answered:
                    type: boolean
                  view_count:
                    type: integer
                    example: 0
                  answer_count:
                    type: integer
                    example: 0
                  score:
                    type: integer
                    example: 0
                  last_activity_date:
                    type: integer
                    example: 0
                  creation_date:
                    type: integer
                    example: 0
                  question_id:
                    type: integer
                    example: 0
                  link:
                    type: string
                    example: http://something.com
                  title:
                    type: string
                    example: This is a question?
  /twitter:
    get:
      tags:
        - 🐦 Twitter
      summary: Read all available Twitter accounts
      operationId: getTwitters
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - developer_id
                    - screen_name
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    developer_id:
                      type: string
                      format: uuid
                    user:
                      type: integer
                      example: 0
                    joined_at:
                      type: string
                      format: date-time
                    name:
                      type: string
                      example: Winston Whitehall
                    screen_name:
                      type: string
                      example: winst_whitehall
                    image:
                      type: string
                      example: http://something.com
                    followers:
                      type: integer
                      example: 0
                    friends:
                      type: integer
                      example: 0
                    listed:
                      type: integer
                      example: 0
                    favorites:
                      type: integer
                      example: 0
                    count:
                      type: integer
                      example: 0
                    location:
                      type: string
                      example: London
                    description:
                      type: string
                      example: Travels with My Father
                    url:
                      type: string
                      example: https://netflix.com
    post:
      tags:
        - 🐦 Twitter
      summary: Create a new Twitter account
      operationId: createTwitter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                screen_name:
                  type: string
                  example: winst_whitehall
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1twitter/get/responses/200/content/application~1jso\
                  n/schema/items"
  "/twitter/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired Twitter account
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🐦 Twitter
      summary: Read specific Twitter acount by ID
      operationId: getTwitterByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - developer_id
                  - screen_name
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  developer_id:
                    type: string
                    format: uuid
                  user:
                    type: integer
                    example: 0
                  joined_at:
                    type: string
                    format: date-time
                  name:
                    type: string
                    example: Winston Whitehall
                  screen_name:
                    type: string
                    example: winst_whitehall
                  image:
                    type: string
                    example: http://something.com
                  followers:
                    type: integer
                    example: 0
                  friends:
                    type: integer
                    example: 0
                  listed:
                    type: integer
                    example: 0
                  favorites:
                    type: integer
                    example: 0
                  count:
                    type: integer
                    example: 0
                  location:
                    type: string
                    example: London
                  description:
                    type: string
                    example: Travels with My Father
                  url:
                    type: string
                    example: https://netflix.com
    put:
      tags:
        - 🐦 Twitter
      summary: Update specific Twitter account by ID
      operationId: updateTwitter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                user:
                  type: integer
                  example: 0
                joined_at:
                  type: string
                  format: date-time
                name:
                  type: string
                  example: Winston Whitehall
                screen_name:
                  type: string
                  example: winst_whitehall
                image:
                  type: string
                  example: http://something.com
                followers:
                  type: integer
                  example: 0
                friends:
                  type: integer
                  example: 0
                listed:
                  type: integer
                  example: 0
                favorites:
                  type: integer
                  example: 0
                count:
                  type: integer
                  example: 0
                location:
                  type: string
                  example: London
                description:
                  type: string
                  example: Travels with My Father
                url:
                  type: string
                  example: https://netflix.com
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1twitter~1%7Bid%7D/get/responses/200/content/applic\
                  ation~1json/schema"
    delete:
      tags:
        - 🐦 Twitter
      summary: Delete specific Twitter account by ID
      operationId: deleteTwitterByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/twitter/timeline/{screen_name}":
    parameters:
      - name: screen_name
        in: path
        description: Screen name of Twitter account
        required: true
        schema:
          type: string
          example: winst_whitehall
    get:
      tags:
        - 🐦 Twitter
      summary: Get timeline for specific Twitter user
      operationId: getTwitterTimeline
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /twitter/status:
    get:
      tags:
        - 🐦 ✒️ Twitter Status
      summary: Read all available account updates
      operationId: getTwitterStatuses
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - twitter_id
                    - published_at
                    - status
                    - link
                    - full_text
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    twitter_id:
                      type: string
                      format: uuid
                    published_at:
                      type: string
                      format: date-time
                    status:
                      type: string
                      example: "1175855334558068736"
                    link:
                      type: string
                      example: http://something.com
                    full_text:
                      type: string
                      example: Tweet, tweet!
                    favorite:
                      type: integer
                      example: 0
                    retweet:
                      type: integer
                      example: 0
                    hashtags:
                      type: array
                      items:
                        type: string
                      example:
                        - developers
                        - rock
                    mentions:
                      type: array
                      items:
                        type: string
                      example:
                        - somebody
                        - that_person
                    urls:
                      type: array
                      items:
                        type: string
                      example:
                        - http://something.com
                        - http://else.com
    post:
      tags:
        - 🐦 ✒️ Twitter Status
      summary: Create a new Twitter status update
      operationId: createTwitterStatus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                twitter_id:
                  type: string
                  format: uuid
                published_at:
                  type: string
                  format: date-time
                status:
                  type: string
                  example: "1175855334558068736"
                link:
                  type: string
                  example: http://something.com
                full_text:
                  type: string
                  example: Tweet, tweet!
                favorite:
                  type: integer
                  example: 0
                retweet:
                  type: integer
                  example: 0
                hashtags:
                  type: array
                  items:
                    type: string
                  example:
                    - developers
                    - rock
                mentions:
                  type: array
                  items:
                    type: string
                  example:
                    - somebody
                    - that_person
                urls:
                  type: array
                  items:
                    type: string
                  example:
                    - http://something.com
                    - http://else.com
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1twitter~1status/get/responses/200/content/applicat\
                  ion~1json/schema/items"
  "/twitter/status/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired Twitter status
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🐦 ✒️ Twitter Status
      summary: Read specific Twitter status by ID
      operationId: getTwitterStatusByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - twitter_id
                  - published_at
                  - status
                  - link
                  - full_text
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  twitter_id:
                    type: string
                    format: uuid
                  published_at:
                    type: string
                    format: date-time
                  status:
                    type: string
                    example: "1175855334558068736"
                  link:
                    type: string
                    example: http://something.com
                  full_text:
                    type: string
                    example: Tweet, tweet!
                  favorite:
                    type: integer
                    example: 0
                  retweet:
                    type: integer
                    example: 0
                  hashtags:
                    type: array
                    items:
                      type: string
                    example:
                      - developers
                      - rock
                  mentions:
                    type: array
                    items:
                      type: string
                    example:
                      - somebody
                      - that_person
                  urls:
                    type: array
                    items:
                      type: string
                    example:
                      - http://something.com
                      - http://else.com
    put:
      tags:
        - 🐦 ✒️ Twitter Status
      summary: Update specific Twitter status by ID
      operationId: updateTwitterStatus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                twitter_id:
                  type: string
                  format: uuid
                published_at:
                  type: string
                  format: date-time
                status:
                  type: string
                  example: "1175855334558068736"
                link:
                  type: string
                  example: http://something.com
                full_text:
                  type: string
                  example: Tweet, tweet!
                favorite:
                  type: integer
                  example: 0
                retweet:
                  type: integer
                  example: 0
                hashtags:
                  type: array
                  items:
                    type: string
                  example:
                    - developers
                    - rock
                mentions:
                  type: array
                  items:
                    type: string
                  example:
                    - somebody
                    - that_person
                urls:
                  type: array
                  items:
                    type: string
                  example:
                    - http://something.com
                    - http://else.com
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1twitter~1status~1%7Bid%7D/get/responses/200/conten\
                  t/application~1json/schema"
    delete:
      tags:
        - 🐦 ✒️ Twitter Status
      summary: Delete specific Twitter status by ID
      operationId: deleteTwitterStatusByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/twitter/status/id/{id}":
    parameters:
      - name: id
        in: path
        description: Twitter-specific status ID
        required: true
        schema:
          type: string
          example: "1175855334558068736"
    get:
      tags:
        - 🐦 ✒️ Twitter Status
      summary: Read specific Twitter status by Twitter-specific ID
      operationId: getTwitterStatusFromID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - twitter_id
                  - published_at
                  - status
                  - link
                  - full_text
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  twitter_id:
                    type: string
                    format: uuid
                  published_at:
                    type: string
                    format: date-time
                  status:
                    type: string
                    example: "1175855334558068736"
                  link:
                    type: string
                    example: http://something.com
                  full_text:
                    type: string
                    example: Tweet, tweet!
                  favorite:
                    type: integer
                    example: 0
                  retweet:
                    type: integer
                    example: 0
                  hashtags:
                    type: array
                    items:
                      type: string
                    example:
                      - developers
                      - rock
                  mentions:
                    type: array
                    items:
                      type: string
                    example:
                      - somebody
                      - that_person
                  urls:
                    type: array
                    items:
                      type: string
                    example:
                      - http://something.com
                      - http://else.com
  "/twitter/status/{id}/media":
    parameters:
      - name: id
        in: path
        description: ID field for specific Twitter status
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🐦 ✒️ Twitter Status
      summary: Read all available media for given Twitter status
      operationId: getTwitterStatusMedia
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/paths/~1blog~1post~1%7Bid%7D~1media/get/responses/200/co\
                    ntent/application~1json/schema/items"
    post:
      tags:
        - 🐦 ✒️ Twitter Status
      summary: Create a new reference between a Twitter status and media
      operationId: createTwitterStatusMedia
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                media_id:
                  type: string
                  format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  post_id:
                    type: string
                    format: uuid
                  media_id:
                    type: string
                    format: uuid
  /website:
    get:
      tags:
        - 🌐 Website
      summary: Read all available websites
      operationId: getWebsites
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - developer_id
                    - url
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    developer_id:
                      type: string
                      format: uuid
                    url:
                      type: string
                      example: http://something.com
    post:
      tags:
        - 🌐 Website
      summary: Create a new website
      operationId: createWebsite
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                url:
                  type: string
                  example: http://something.com
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1website/get/responses/200/content/application~1jso\
                  n/schema/items"
  "/website/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired website
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🌐 Website
      summary: Read specific website by ID
      operationId: getWebsiteByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - developer_id
                  - url
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  developer_id:
                    type: string
                    format: uuid
                  url:
                    type: string
                    example: http://something.com
    put:
      tags:
        - 🌐 Website
      summary: Update specific website by ID
      operationId: updateWebsite
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                url:
                  type: string
                  example: http://something.com
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1website~1%7Bid%7D/get/responses/200/content/applic\
                  ation~1json/schema"
    delete:
      tags:
        - 🌐 Website
      summary: Delete specific website by ID
      operationId: deleteWebsiteByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  /youtube:
    get:
      tags:
        - 📺 YouTube
      summary: Read all available YouTube accounts
      operationId: getYouTube
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - developer_id
                    - channel
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    developer_id:
                      type: string
                      format: uuid
                    channel:
                      type: string
                      example: UCSFeFhtLBuzU2UMs7oOL54A
    post:
      tags:
        - 📺 YouTube
      summary: Create a new YouTube account
      operationId: createYouTube
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                channel:
                  type: string
                  example: UCSFeFhtLBuzU2UMs7oOL54A
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1youtube/get/responses/200/content/application~1jso\
                  n/schema/items"
  "/youtube/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired YouTube account
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 📺 YouTube
      summary: Read specific YouTube account by ID
      operationId: getYouTubeID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - developer_id
                  - channel
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  developer_id:
                    type: string
                    format: uuid
                  channel:
                    type: string
                    example: UCSFeFhtLBuzU2UMs7oOL54A
    put:
      tags:
        - 📺 YouTube
      summary: Update specific YouTube account by ID
      operationId: updateYouTube
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                developer_id:
                  type: string
                  format: uuid
                channel:
                  type: string
                  example: UCSFeFhtLBuzU2UMs7oOL54A
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1youtube~1%7Bid%7D/get/responses/200/content/applic\
                  ation~1json/schema"
    delete:
      tags:
        - 📺 YouTube
      summary: Delete specific YouTube account by ID
      operationId: deleteYouTubeID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  /youtube/video:
    get:
      tags:
        - 📺 📼 YouTube Video
      summary: Read all available YouTube videos
      operationId: getYouTubeVideos
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - youtube_id
                    - published_at
                    - guid
                    - video
                    - link
                    - title
                    - summary
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    youtube_id:
                      type: string
                      format: uuid
                    published_at:
                      type: string
                      format: date-time
                    guid:
                      type: string
                      format: uuid
                    video:
                      type: string
                      example: oNyXYPhnUIs
                    link:
                      type: string
                      example: http://something.com
                    title:
                      type: string
                      example: Knight Rider
                    views:
                      type: integer
                      example: 0
                    stars:
                      type: integer
                      example: 0
                    duration:
                      type: integer
                      example: 0
                    thumbnail:
                      type: string
                      example: http://something.com
                    summary:
                      type: string
                      example: Original show introduction
    post:
      tags:
        - 📺 📼 YouTube Video
      summary: Create a new account video
      operationId: createYouTubeVideo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                youtube_id:
                  type: string
                  format: uuid
                published_at:
                  type: string
                  format: date-time
                guid:
                  type: string
                  format: uuid
                video:
                  type: string
                  example: oNyXYPhnUIs
                link:
                  type: string
                  example: http://something.com
                title:
                  type: string
                  example: Knight Rider
                views:
                  type: integer
                  example: 0
                stars:
                  type: integer
                  example: 0
                duration:
                  type: integer
                  example: 0
                thumbnail:
                  type: string
                  example: http://something.com
                summary:
                  type: string
                  example: Original show introduction
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1youtube~1video/get/responses/200/content/applicati\
                  on~1json/schema/items"
  "/youtube/video/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired account video
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 📺 📼 YouTube Video
      summary: Read specific account video by ID
      operationId: getYouTubeVideoByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - youtube_id
                  - published_at
                  - guid
                  - video
                  - link
                  - title
                  - summary
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  youtube_id:
                    type: string
                    format: uuid
                  published_at:
                    type: string
                    format: date-time
                  guid:
                    type: string
                    format: uuid
                  video:
                    type: string
                    example: oNyXYPhnUIs
                  link:
                    type: string
                    example: http://something.com
                  title:
                    type: string
                    example: Knight Rider
                  views:
                    type: integer
                    example: 0
                  stars:
                    type: integer
                    example: 0
                  duration:
                    type: integer
                    example: 0
                  thumbnail:
                    type: string
                    example: http://something.com
                  summary:
                    type: string
                    example: Original show introduction
    put:
      tags:
        - 📺 📼 YouTube Video
      summary: Update specific account video by ID
      operationId: updateYouTubeVideo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                youtube_id:
                  type: string
                  format: uuid
                published_at:
                  type: string
                  format: date-time
                guid:
                  type: string
                  format: uuid
                video:
                  type: string
                  example: oNyXYPhnUIs
                link:
                  type: string
                  example: http://something.com
                title:
                  type: string
                  example: Knight Rider
                views:
                  type: integer
                  example: 0
                stars:
                  type: integer
                  example: 0
                duration:
                  type: integer
                  example: 0
                thumbnail:
                  type: string
                  example: http://something.com
                summary:
                  type: string
                  example: Original show introduction
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1youtube~1video~1%7Bid%7D/get/responses/200/content\
                  /application~1json/schema"
    delete:
      tags:
        - 📺 📼 YouTube Video
      summary: Delete specific account video by ID
      operationId: deleteYouTubeVideoByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/youtube/video/guid/{id}":
    parameters:
      - name: id
        in: path
        description: GUID field for specific account video (Base64, UTF-8)
        required: true
        schema:
          type: string
          format: byte
    get:
      tags:
        - 📺 📼 YouTube Video
      summary: Read specific account video by GUID
      operationId: getYouTubeVideoByGUID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - youtube_id
                  - published_at
                  - guid
                  - video
                  - link
                  - title
                  - summary
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  youtube_id:
                    type: string
                    format: uuid
                  published_at:
                    type: string
                    format: date-time
                  guid:
                    type: string
                    format: uuid
                  video:
                    type: string
                    example: oNyXYPhnUIs
                  link:
                    type: string
                    example: http://something.com
                  title:
                    type: string
                    example: Knight Rider
                  views:
                    type: integer
                    example: 0
                  stars:
                    type: integer
                    example: 0
                  duration:
                    type: integer
                    example: 0
                  thumbnail:
                    type: string
                    example: http://something.com
                  summary:
                    type: string
                    example: Original show introduction
  "/youtube/video/duration/{video}":
    parameters:
      - name: video
        in: path
        description: Specific YouTube video ID
        required: true
        schema:
          type: string
          example: oNyXYPhnUIs
    get:
      tags:
        - 📺 📼 YouTube Video
      summary: Get information about video duration
      operationId: getYouTubeVideoDuration
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  duration:
                    type: string
                    example: PT9M59S
                  seconds:
                    type: integer
                    example: 599
  /repository:
    get:
      tags:
        - 🗄️ Repository
      summary: Read all available repositories
      operationId: getRepos
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - full_name
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    repository:
                      type: integer
                      example: 0
                    name:
                      type: string
                      example: Avocado
                    full_name:
                      type: string
                      example: krhoyt/Avocado
                    description:
                      type: string
                      example: Developer relations in a box.
                    is_fork:
                      type: boolean
                      example: true
                    started_at:
                      type: string
                      format: date-time
                    pushed_at:
                      type: string
                      format: date-time
                    size:
                      type: integer
                      example: 0
                    stargazers:
                      type: integer
                      example: 0
                    watchers:
                      type: integer
                      example: 0
                    forks:
                      type: integer
                      example: 0
                    issues:
                      type: integer
                      example: 0
                    network:
                      type: integer
                      example: 0
                    subscribers:
                      type: integer
                      example: 0
    post:
      tags:
        - 🗄️ Repository
      summary: Create a new repository
      operationId: createRepo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  example: krhoyt/Avocado
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1repository/get/responses/200/content/application~1\
                  json/schema/items"
  "/repository/{id}":
    parameters:
      - name: id
        in: path
        description: ID field for desired repository
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - 🗄️ Repository
      summary: Read specific repository by ID
      operationId: getRepoByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                required:
                  - full_name
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  repository:
                    type: integer
                    example: 0
                  name:
                    type: string
                    example: Avocado
                  full_name:
                    type: string
                    example: krhoyt/Avocado
                  description:
                    type: string
                    example: Developer relations in a box.
                  is_fork:
                    type: boolean
                    example: true
                  started_at:
                    type: string
                    format: date-time
                  pushed_at:
                    type: string
                    format: date-time
                  size:
                    type: integer
                    example: 0
                  stargazers:
                    type: integer
                    example: 0
                  watchers:
                    type: integer
                    example: 0
                  forks:
                    type: integer
                    example: 0
                  issues:
                    type: integer
                    example: 0
                  network:
                    type: integer
                    example: 0
                  subscribers:
                    type: integer
                    example: 0
    patch:
      tags:
        - 🗄️ Repository
      summary: Update repository based on API data
      operationId: updateRepoData
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1repository~1%7Bid%7D/get/responses/200/content/app\
                  lication~1json/schema"
    put:
      tags:
        - 🗄️ Repository
      summary: Update specific repository by ID
      operationId: updateRepo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                repository:
                  type: integer
                  example: 0
                name:
                  type: string
                  example: Avocado
                full_name:
                  type: string
                  example: krhoyt/Avocado
                description:
                  type: string
                  example: Developer relations in a box.
                is_fork:
                  type: boolean
                  example: true
                started_at:
                  type: string
                  format: date-time
                pushed_at:
                  type: string
                  format: date-time
                size:
                  type: integer
                  example: 0
                stargazers:
                  type: integer
                  example: 0
                watchers:
                  type: integer
                  example: 0
                forks:
                  type: integer
                  example: 0
                issues:
                  type: integer
                  example: 0
                network:
                  type: integer
                  example: 0
                subscribers:
                  type: integer
                  example: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/paths/~1repository~1%7Bid%7D/get/responses/200/content/app\
                  lication~1json/schema"
    delete:
      tags:
        - 🗄️ Repository
      summary: Delete specific repository by ID
      operationId: deleteRepoByID
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  "/watson/language/{url}":
    parameters:
      - name: url
        in: path
        description: URL of the document to analyze (Base64, UTF-8)
        required: true
        schema:
          type: string
          format: byte
    get:
      tags:
        - 🧠 Watson
      summary: Use natural language understanding on a document
      operationId: getWatsonLanguage
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  keywords:
                    type: array
                    items:
                      type: string
                    example:
                      - ibm
                      - cloud
                      - devrel
                  concepts:
                    type: array
                    items:
                      type: string
                    example:
                      - ibm
                      - cloud
                      - devrel
                  entities:
                    type: array
                    items:
                      type: string
                    example:
                      - ibm
                      - cloud
                      - devrel
  "/watson/vision/{url}":
    parameters:
      - name: url
        in: path
        description: URL of the image to analyze (Base64, UTF-8)
        required: true
        schema:
          type: string
          format: byte
    get:
      tags:
        - 🧠 Watson
      summary: Use visual recognition on an image
      operationId: getWatsonImage
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - ibm
                  - cloud
                  - devrel
  "/utility/images/{url}":
    get:
      tags:
        - 🧰 Utility
      summary: Extract unique images from a document (web page)
      operationId: getUtilityImages
      parameters:
        - name: url
          in: path
          description: URL of the document to scape (Base64, UTF-8)
          required: true
          schema:
            type: string
            format: byte
        - in: query
          name: accept
          required: false
          schema:
            type: string
            example: jpeg,jpg,png,tiff,gif
            default: jpeg,jpg,png,tiff,gif
          description: Accepted image types defaults to Watson supported formats
        - in: query
          name: check
          required: false
          schema:
            type: boolean
            default: true
          description: Check for valid file type against accepted types
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            default: 10
          description: Maximum size of image to classify (Mb)
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - http://something.com/bee.jpg
                  - http://something.com/whisk.png
                  - http://something.com/cat.gif
  /utility/geocode:
    get:
      tags:
        - 🧰 Utility
      summary: Find recommended addresses and locations
      operationId: getUtilityGeocode
      parameters:
        - in: query
          name: location
          required: false
          schema:
            type: string
            example: Armonk, NY
            default: Armonk, NY
          description: The location to geocode
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Avocado
  schemas:
    Account:
      required:
        - email
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        owner:
          type: string
          format: uuid
        email:
          type: string
          example: thedude@biglebowski.com
        password:
          type: string
          format: password
        role:
          type: string
          example: view
        token:
          type: string
          format: uuid
    Blog:
      required:
        - developer_id
        - url
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        developer_id:
          type: string
          format: uuid
        url:
          type: string
          example: http://something.com
    BlogPost:
      required:
        - blog_id
        - published_at
        - guid
        - link
        - title
        - summary
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        blog_id:
          type: string
          format: uuid
        published_at:
          type: string
          format: date-time
        guid:
          type: string
          format: uuid
        link:
          type: string
          example: http://something.com
        title:
          type: string
          example: Friends
        summary:
          type: string
          example: How you doin'?!
        category:
          type: array
          items:
            type: string
          example:
            - sitcom
            - television
        keywords:
          type: array
          items:
            type: string
          example:
            - natural
            - language
            - understanding
        concepts:
          type: array
          items:
            type: string
          example:
            - natural
            - language
            - understanding
        entities:
          type: array
          items:
            type: string
          example:
            - natural
            - language
            - understanding
    BlogPostMedia:
      required:
        - post_id
        - media_id
      type: object
      properties:
        id:
          type: string
          format: uuid
        uuid:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        post_id:
          type: string
          format: uuid
        media_id:
          type: string
          format: uuid
    Capacity:
      required:
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        account_id:
          type: string
          format: uuid
        name:
          type: string
          example: Book (Author)
        color_id:
          type: string
          format: uuid
        weight:
          type: integer
          example: 10
        criteria:
          type: string
          example: 1,2,Term,3,4
    Color:
      required:
        - name
        - foreground
        - background
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          example: Blue
        foreground:
          type: string
          example: "#ffffff"
        background:
          type: string
          example: "#ffffff"
    Contribution:
      required:
        - developer_id
        - description
        - capacity_id
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        developer_id:
          type: string
          format: uuid
        contributed_at:
          type: string
          format: date-time
        description:
          type: string
          example: Published new book
        link:
          type: string
          example: https://something.com
        public:
          type: integer
          example: 0
        capacity_id:
          type: string
          format: uuid
    Dev:
      required:
        - developer_id
        - user_name
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        developer_id:
          type: string
          format: uuid
        user_name:
          type: string
          example: boneskull
    Developer:
      required:
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        account_id:
          type: string
          format: uuid
        level_id:
          type: string
          format: uuid
        name:
          type: string
          example: Monty Burns
        email:
          type: string
          example: smithers@burns.com
        title:
          type: string
          example: Fancy pants CEO
        description:
          type: string
          example: Excellent!
        image:
          type: string
          example: http://something.com
        location:
          type: string
          example: Armonk, NY
        latitude:
          type: number
          format: float
          example: 41.1328412
        longitude:
          type: number
          format: float
          example: -73.7492039
        address:
          type: string
          example: 123 Something Pl
        city:
          type: string
          example: Armonk
        region:
          type: string
          example: New York
        postal:
          type: string
          example: "12345"
        country:
          type: string
          example: USA
        public:
          type: integer
          example: 0
        internal:
          type: string
          example: internalID
    DevPost:
      required:
        - dev_id
        - published_at
        - guid
        - article
        - link
        - title
        - summary
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        dev_id:
          type: string
          format: uuid
        published_at:
          type: string
          format: date-time
        guid:
          type: string
          format: uuid
        article:
          type: integer
          example: 172031
        link:
          type: string
          example: http://something.com
        title:
          type: string
          example: Friends
        summary:
          type: string
          example: How you doin'?!
        likes:
          type: integer
          example: 0
        reading:
          type: integer
          example: 0
        unicorn:
          type: integer
          example: 0
        keywords:
          type: array
          items:
            type: string
          example:
            - natural
            - language
            - understanding
        concepts:
          type: array
          items:
            type: string
          example:
            - natural
            - language
            - understanding
        entities:
          type: array
          items:
            type: string
          example:
            - natural
            - language
            - understanding
    DevPostMedia:
      required:
        - post_id
        - media_id
      type: object
      properties:
        id:
          type: string
          format: uuid
        uuid:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        post_id:
          type: string
          format: uuid
        media_id:
          type: string
          format: uuid
    GitHub:
      required:
        - developer_id
        - login
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        developer_id:
          type: string
          format: uuid
        login:
          type: string
          example: krhoyt
        name:
          type: string
          example: Kevin Hoyt
        company:
          type: string
          example: IBM
        blog:
          type: string
          example: http://something.com
        location:
          type: string
          example: The Interwebs!
        email:
          type: string
          example: krhoyt@us.ibm.com
        hireable:
          type: boolean
          example: 0
        repositories:
          type: integer
          example: 0
        gists:
          type: integer
          example: 0
        followers:
          type: integer
          example: 0
        following:
          type: integer
          example: 0
    GitHubEvent:
      required:
        - github_id
        - published_at
        - event
        - event_name
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        github_id:
          type: string
          format: uuid
        published_at:
          type: string
          format: date-time
        event:
          type: integer
          example: 0
        event_name:
          type: string
          example: CommentEvent
        repository:
          type: integer
          example: 0
        repository_name:
          type: string
          example: phenomnomnominal/betterer
    Language:
      required:
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        account_id:
          type: string
          format: uuid
        name:
          type: string
          example: English
    Level:
      required:
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        account_id:
          type: string
          format: uuid
        name:
          type: string
          example: Ambassadors
        low:
          type: integer
          example: 0
        weight:
          type: integer
          example: 10
    Instagram:
      required:
        - developer_id
        - profile
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        developer_id:
          type: string
          format: uuid
        profile:
          type: string
          example: parkerkrhoyt
    LinkedIn:
      required:
        - developer_id
        - profile
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        developer_id:
          type: string
          format: uuid
        profile:
          type: string
          example: parkerkrhoyt
    Media:
      required:
        - url
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        url:
          type: string
          example: http://something.com
        keywords:
          type: array
          items:
            type: string
          example:
            - eagle
            - landed
            - moon
    Medium:
      required:
        - developer_id
        - user_name
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        developer_id:
          type: string
          format: uuid
        user_name:
          type: string
          example: boneskull
        following:
          type: integer
          example: 0
        followed_by:
          type: integer
          example: 0
    MediumPost:
      required:
        - medium_id
        - published_at
        - guid
        - link
        - title
        - summary
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        medium_id:
          type: string
          format: uuid
        published_at:
          type: string
          format: date-time
        guid:
          type: string
          format: uuid
        link:
          type: string
          example: http://something.com
        title:
          type: string
          example: Friends
        summary:
          type: string
          example: How you doin'?!
        claps:
          type: integer
          example: 0
        category:
          type: array
          items:
            type: string
          example:
            - sitcom
            - television
        keywords:
          type: array
          items:
            type: string
          example:
            - natural
            - language
            - understanding
        concepts:
          type: array
          items:
            type: string
          example:
            - natural
            - language
            - understanding
        entities:
          type: array
          items:
            type: string
          example:
            - natural
            - language
            - understanding
    MediumPostMedia:
      required:
        - post_id
        - media_id
      type: object
      properties:
        id:
          type: string
          format: uuid
        uuid:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        post_id:
          type: string
          format: uuid
        media_id:
          type: string
          format: uuid
    Note:
      required:
        - developer_id
        - situation_id
        - full_text
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        developer_id:
          type: string
          format: uuid
        situation_id:
          type: string
          format: uuid
        full_text:
          type: string
          example: Somewhere over the rainbow.
    Organization:
      required:
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          example: IBM
        color_id:
          type: string
          format: uuid
    Reddit:
      required:
        - developer_id
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        developer_id:
          type: string
          format: uuid
        user:
          type: string
          example: u19t6
        name:
          type: string
          example: Tokyono
        joined_at:
          type: string
          format: date-time
        image:
          type: string
          example: http://something.com
        link:
          type: integer
          example: 0
        comment:
          type: integer
          example: 0
    RedditPost:
      required:
        - reddit_id
        - published_at
        - guid
        - title
        - body
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        reddit_id:
          type: string
          format: uuid
        published_at:
          type: string
          format: date-time
        guid:
          type: string
          example: f1vb4nq
        author:
          type: string
          example: Sipredion
        title:
          type: string
          example: How about that?
        body:
          type: string
          example: This is my opinion.
        comments:
          type: integer
          example: 0
        score:
          type: integer
          example: 0
        ups:
          type: integer
          example: 0
        downs:
          type: integer
          example: 0
        parent:
          type: string
          example: t1_f1v83vi
        subreddit:
          type: string
          example: worldnews
        owner:
          type: string
          example: vannybros
        link:
          type: string
          example: http://something.com
    Relationship:
      required:
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        account_id:
          type: string
          format: uuid
        name:
          type: string
          example: IBM
        color_id:
          type: string
          format: uuid
    Repository:
      required:
        - full_name
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        repository:
          type: integer
          example: 0
        name:
          type: string
          example: Avocado
        full_name:
          type: string
          example: krhoyt/Avocado
        description:
          type: string
          example: Developer relations in a box.
        is_fork:
          type: boolean
          example: true
        started_at:
          type: string
          format: date-time
        pushed_at:
          type: string
          format: date-time
        size:
          type: integer
          example: 0
        stargazers:
          type: integer
          example: 0
        watchers:
          type: integer
          example: 0
        forks:
          type: integer
          example: 0
        issues:
          type: integer
          example: 0
        network:
          type: integer
          example: 0
        subscribers:
          type: integer
          example: 0
    Role:
      required:
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        account_id:
          type: string
          format: uuid
        name:
          type: string
          example: Engineer
        color_id:
          type: string
          format: uuid
    Situation:
      required:
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        account_id:
          type: string
          format: uuid
        name:
          type: string
          example: Sleeping
        color_id:
          type: string
          format: uuid
    Skill:
      required:
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          example: JavaScript
        color:
          type: string
          example: "#ffffff"
    StackOverflow:
      required:
        - developer_id
        - account
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        developer_id:
          type: string
          format: uuid
        user:
          type: integer
          example: 11919256
        account:
          type: integer
          example: 14905500
        joined_at:
          type: string
          format: date-time
        reputation:
          type: integer
          example: 0
        accept_rate:
          type: integer
          example: 0
        name:
          type: string
          example: krhoyt
        location:
          type: string
          example: The Interwebs!
        website:
          type: string
          example: http://something.com
        link:
          type: string
          example: http://something.com
        image:
          type: string
          example: http://something.com
    StackOverflowAnswer:
      required:
        - so_id
        - answer
        - question
        - active_at
        - accepted
        - score
        - views
        - link
        - title
        - tags
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        so_id:
          type: string
          format: uuid
        answer:
          type: integer
          example: 56961215
        question:
          type: integer
          example: 56960996
        active_at:
          type: string
          format: date-time
        accepted:
          type: integer
          example: 0
        score:
          type: integer
          example: 0
        views:
          type: integer
          example: 0
        link:
          type: string
          example: http://something.com
        title:
          type: string
          example: How do I do this?
        tags:
          type: array
          items:
            type: string
          example:
            - some
            - technology
            - here
        keywords:
          type: array
          items:
            type: string
          example:
            - natural
            - language
            - understanding
        concepts:
          type: array
          items:
            type: string
          example:
            - natural
            - language
            - understanding
        entities:
          type: array
          items:
            type: string
          example:
            - natural
            - language
            - understanding
    StackOverflowQuestion:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
          example:
            - python
            - ibm
            - serverless
        owner:
          type: object
        is_answered:
          type: boolean
        view_count:
          type: integer
          example: 0
        answer_count:
          type: integer
          example: 0
        score:
          type: integer
          example: 0
        last_activity_date:
          type: integer
          example: 0
        creation_date:
          type: integer
          example: 0
        question_id:
          type: integer
          example: 0
        link:
          type: string
          example: http://something.com
        title:
          type: string
          example: This is a question?
    Twitter:
      required:
        - developer_id
        - screen_name
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        developer_id:
          type: string
          format: uuid
        user:
          type: integer
          example: 0
        joined_at:
          type: string
          format: date-time
        name:
          type: string
          example: Winston Whitehall
        screen_name:
          type: string
          example: winst_whitehall
        image:
          type: string
          example: http://something.com
        followers:
          type: integer
          example: 0
        friends:
          type: integer
          example: 0
        listed:
          type: integer
          example: 0
        favorites:
          type: integer
          example: 0
        count:
          type: integer
          example: 0
        location:
          type: string
          example: London
        description:
          type: string
          example: Travels with My Father
        url:
          type: string
          example: https://netflix.com
    TwitterStatus:
      required:
        - twitter_id
        - published_at
        - status
        - link
        - full_text
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        twitter_id:
          type: string
          format: uuid
        published_at:
          type: string
          format: date-time
        status:
          type: string
          example: "1175855334558068736"
        link:
          type: string
          example: http://something.com
        full_text:
          type: string
          example: Tweet, tweet!
        favorite:
          type: integer
          example: 0
        retweet:
          type: integer
          example: 0
        hashtags:
          type: array
          items:
            type: string
          example:
            - developers
            - rock
        mentions:
          type: array
          items:
            type: string
          example:
            - somebody
            - that_person
        urls:
          type: array
          items:
            type: string
          example:
            - http://something.com
            - http://else.com
    TwitterStatusMedia:
      required:
        - status_id
        - media_id
      type: object
      properties:
        id:
          type: string
          format: uuid
        uuid:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        status_id:
          type: string
          format: uuid
        media_id:
          type: string
          format: uuid
    Website:
      required:
        - developer_id
        - url
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        developer_id:
          type: string
          format: uuid
        url:
          type: string
          example: http://something.com
    YouTube:
      required:
        - developer_id
        - channel
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        developer_id:
          type: string
          format: uuid
        channel:
          type: string
          example: UCSFeFhtLBuzU2UMs7oOL54A
    YouTubeVideo:
      required:
        - youtube_id
        - published_at
        - guid
        - video
        - link
        - title
        - summary
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        youtube_id:
          type: string
          format: uuid
        published_at:
          type: string
          format: date-time
        guid:
          type: string
          format: uuid
        video:
          type: string
          example: oNyXYPhnUIs
        link:
          type: string
          example: http://something.com
        title:
          type: string
          example: Knight Rider
        views:
          type: integer
          example: 0
        stars:
          type: integer
          example: 0
        duration:
          type: integer
          example: 0
        thumbnail:
          type: string
          example: http://something.com
        summary:
          type: string
          example: Original show introduction
