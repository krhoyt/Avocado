openapi: 3.0.0
info:
  version: 1.0.0
  title: Ô∏èüñ•Ô∏è Developer
  description: Paths and components
  contact:
    email: parkerkrhoyt@gmail.com
  license:
    name: MIT
externalDocs:
  description: Find out more about Avocado
  url: http://kevinhoyt.com
servers:
- url: http://localhost:3000/api
security:
- ApiKeyAuth: []
tags:
- name: üñ•Ô∏è Developer
  description: Individual developers - and advocates
paths:
  /developer:
    get:      
      parameters:
        - name: private
          in: query
          description: Include developers marked as private
          required: false
          schema:
            type: boolean
            default: false    
      tags:
      - üñ•Ô∏è Developer
      summary: Read all developers
      operationId: getDevelopers
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Developer'
    post:
      tags:
      - üñ•Ô∏è Developer
      summary: Create a new developer
      operationId: createDeveloper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Monty Burns
                email:
                  type: string
                  example: smithers@burns.com
                title:
                  type: string
                  example: Fancy pants CEO
                description:
                  type: string
                  example: Excellent!
                image:
                  type: string
                  example: http://something.com
                location:
                  type: string
                  example: Armonk, NY
                latitude:
                  type: number
                  format: float
                  example: 41.1328412
                longitude:
                  type: number
                  format: float
                  example: -73.7492039
                address:
                  type: string
                  example: 123 Something Pl          
                city:
                  type: string
                  example: Armonk
                region:
                  type: string
                  example: New York
                postal:
                  type: string
                  example: "12345"
                country:
                  type: string
                  example: USA                  
                public:
                  type: integer
                  example: 0
                internal:
                  type: string
                  example: internalID
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Developer'
<<<<<<< HEAD:api/reference/developer.yaml
  /developer/organization/{id}:
    parameters:
    - name: private
      in: query
      description: Include developers marked as private
      required: false
      schema:
        type: boolean
        default: false
    - name: id
      in: path
      description: ID field for desired organization
      required: true
      schema:
        type: string
        format: uuid
    get:
      tags:
      - üñ•Ô∏è Developer
      summary: Read developers for a given organization
      operationId: getDevelopersByOrganizationID
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:                
                  $ref: '#/components/schemas/Developer'                                    
=======
>>>>>>> master:api/developer.yaml
  /developer/{id}:
    parameters:
    - name: id
      in: path
      description: ID field for desired developer
      required: true
      schema:
        type: string
        format: uuid
    get:
      tags:
      - üñ•Ô∏è Developer
      summary: Read specific developer by ID
      operationId: getDeveloperByID
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Developer'
    put:
      tags:
      - üñ•Ô∏è Developer
      summary: Update specific developer by ID
      operationId: updateDeveloper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Monty Burns
                email:
                  type: string
                  example: smithers@burns.com
                title:
                  type: string
                  example: Fancy pants CEO
                description:
                  type: string
                  example: Excellent!
                image:
                  type: string
                  example: http://something.com
                location:
                  type: string
                  example: Armonk, NY
                latitude:
                  type: number
                  format: float
                  example: 41.1328412
                longitude:
                  type: number
                  format: float
                  example: -73.7492039
                address:
                  type: string
                  example: 123 Something Pl          
                city:
                  type: string
                  example: Armonk
                region:
                  type: string
                  example: New York
                postal:
                  type: string
                  example: "12345"
                country:
                  type: string
                  example: USA                  
                public:
                  type: integer
                  example: 0
                internal:
                  type: string
                  example: internalID
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Developer'
    delete:
      tags:
      - üñ•Ô∏è Developer
      summary: Delete specific developer by ID
      operationId: deleteDeveloperByID
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
  /developer/{id}/social:
    parameters:
    - name: id
      in: path
      description: ID field for desired developer
      required: true
      schema:
        type: string
        format: uuid
    get:
      tags:
      - üñ•Ô∏è Developer
      summary: Get social channels associated with a developer by their ID
      operationId: getDeveloperSocialByID
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    developer_id:
                      type: string
                      format: uuid
                    activity_id:
                      type: string
                      format: uuid
                    activity_name:
                      type: string
                      example: Conference
                    full_text:
                      type: string
                      example: 'IBM was here.'
  /developer/{id}/{model}:
    parameters:
    - name: id
      in: path
      description: ID field for desired developer
      required: true
      schema:
        type: string
        format: uuid
    - name: model
      in: path
      description: Name of desired model (Language, Organization, Language, Skill, Role, Relationship)
      required: true
      schema:
        type: string
        example: skill
    get:
      tags:
      - üñ•Ô∏è Developer
      summary: Get model items associated with a developer by their ID
      operationId: getDeveloperItemsByID
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    name:
                      type: string
                      example: 'IBM'
    post:
      tags:
      - üñ•Ô∏è Developer
      summary: Associate a specific developer with the given model
      operationId: createDeveloperItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                name:
                  type: string
                  example: 'IBM'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    developer_id:
                      type: string
                      format: uuid
                    name:
                      type: string
                      example: 'IBM'
    put:
      tags:
      - üñ•Ô∏è Developer
      summary: Update developer association with a given model
      operationId: updateDeveloperItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
                    example: 'IBM'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    developer_id:
                      type: string
                      format: uuid
                    name:
                      type: string
                      example: 'IBM'
    delete:
      tags:
      - üñ•Ô∏è Developer
      summary: Remove developer association with a given model
      operationId: removeDeveloperItem
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    model:
                      type: string
                      example: 'skill'
  /developer/{developer_id}/{model}/{model_id}:
    parameters:
    - name: developer_id
      in: path
      description: ID field for desired developer
      required: true
      schema:
        type: string
        format: uuid
    - name: model
      in: path
      description: Name of desired model (Language, Organization, Language, Skill, Role)
      required: true
      schema:
        type: string
        example: skill
    - name: model_id
      in: path
      description: ID field for the desired skill
      required: true
      schema:
        type: string
        format: uuid      
    delete:
      tags:
      - üñ•Ô∏è Developer
      summary: Remove a specific model relation for a specific developer
      operationId: removeDeveloperItemsByModelID
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    developer_id:
                      type: string
                      format: uuid
                    model:
                      type: string
                      example: skill
                    model_id:
                      type: string
                      format: uuid
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Avocado
  schemas:
    Developer:
      required:
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          example: Monty Burns
        email:
          type: string
          example: smithers@burns.com
        title:
          type: string
          example: Fancy pants CEO
        description:
          type: string
          example: Excellent!
        image:
          type: string
          example: http://something.com
        location:
          type: string
          example: Armonk, NY
        latitude:
          type: number
          format: float
          example: 41.1328412
        longitude:
          type: number
          format: float
          example: -73.7492039
        address:
          type: string
          example: 123 Something Pl          
        city:
          type: string
          example: Armonk
        region:
          type: string
          example: New York
        postal:
          type: string
          example: "12345"
        country:
          type: string
          example: USA
        public:
          type: integer
          example: 0
        internal:
          type: string
          example: internalID
